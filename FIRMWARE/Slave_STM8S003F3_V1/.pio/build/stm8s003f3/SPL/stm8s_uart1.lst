                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_uart1
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _CLK_GetClockFreq
                                     13 	.globl _UART1_DeInit
                                     14 	.globl _UART1_Init
                                     15 	.globl _UART1_Cmd
                                     16 	.globl _UART1_ITConfig
                                     17 	.globl _UART1_HalfDuplexCmd
                                     18 	.globl _UART1_IrDAConfig
                                     19 	.globl _UART1_IrDACmd
                                     20 	.globl _UART1_LINBreakDetectionConfig
                                     21 	.globl _UART1_LINCmd
                                     22 	.globl _UART1_SmartCardCmd
                                     23 	.globl _UART1_SmartCardNACKCmd
                                     24 	.globl _UART1_WakeUpConfig
                                     25 	.globl _UART1_ReceiverWakeUpCmd
                                     26 	.globl _UART1_ReceiveData8
                                     27 	.globl _UART1_ReceiveData9
                                     28 	.globl _UART1_SendData8
                                     29 	.globl _UART1_SendData9
                                     30 	.globl _UART1_SendBreak
                                     31 	.globl _UART1_SetAddress
                                     32 	.globl _UART1_SetGuardTime
                                     33 	.globl _UART1_SetPrescaler
                                     34 	.globl _UART1_GetFlagStatus
                                     35 	.globl _UART1_ClearFlag
                                     36 	.globl _UART1_GetITStatus
                                     37 	.globl _UART1_ClearITPendingBit
                                     38 ;--------------------------------------------------------
                                     39 ; ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area DATA
                                     42 ;--------------------------------------------------------
                                     43 ; ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area INITIALIZED
                                     46 ;--------------------------------------------------------
                                     47 ; absolute external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DABS (ABS)
                                     50 
                                     51 ; default segment ordering for linker
                                     52 	.area HOME
                                     53 	.area GSINIT
                                     54 	.area GSFINAL
                                     55 	.area CONST
                                     56 	.area INITIALIZER
                                     57 	.area CODE
                                     58 
                                     59 ;--------------------------------------------------------
                                     60 ; global & static initialisations
                                     61 ;--------------------------------------------------------
                                     62 	.area HOME
                                     63 	.area GSINIT
                                     64 	.area GSFINAL
                                     65 	.area GSINIT
                                     66 ;--------------------------------------------------------
                                     67 ; Home
                                     68 ;--------------------------------------------------------
                                     69 	.area HOME
                                     70 	.area HOME
                                     71 ;--------------------------------------------------------
                                     72 ; code
                                     73 ;--------------------------------------------------------
                                     74 	.area CODE
                                     75 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 53: void UART1_DeInit(void)
                                     76 ;	-----------------------------------------
                                     77 ;	 function UART1_DeInit
                                     78 ;	-----------------------------------------
      000000                         79 _UART1_DeInit:
                                     80 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 57: (void)UART1->SR;
      000000 C6 52 30         [ 1]   81 	ld	a, 0x5230
                                     82 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 58: (void)UART1->DR;
      000003 C6 52 31         [ 1]   83 	ld	a, 0x5231
                                     84 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 60: UART1->BRR2 = UART1_BRR2_RESET_VALUE;  /* Set UART1_BRR2 to reset value 0x00 */
      000006 35 00 52 33      [ 1]   85 	mov	0x5233+0, #0x00
                                     86 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 61: UART1->BRR1 = UART1_BRR1_RESET_VALUE;  /* Set UART1_BRR1 to reset value 0x00 */
      00000A 35 00 52 32      [ 1]   87 	mov	0x5232+0, #0x00
                                     88 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 63: UART1->CR1 = UART1_CR1_RESET_VALUE;  /* Set UART1_CR1 to reset value 0x00 */
      00000E 35 00 52 34      [ 1]   89 	mov	0x5234+0, #0x00
                                     90 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 64: UART1->CR2 = UART1_CR2_RESET_VALUE;  /* Set UART1_CR2 to reset value 0x00 */
      000012 35 00 52 35      [ 1]   91 	mov	0x5235+0, #0x00
                                     92 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 65: UART1->CR3 = UART1_CR3_RESET_VALUE;  /* Set UART1_CR3 to reset value 0x00 */
      000016 35 00 52 36      [ 1]   93 	mov	0x5236+0, #0x00
                                     94 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 66: UART1->CR4 = UART1_CR4_RESET_VALUE;  /* Set UART1_CR4 to reset value 0x00 */
      00001A 35 00 52 37      [ 1]   95 	mov	0x5237+0, #0x00
                                     96 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 67: UART1->CR5 = UART1_CR5_RESET_VALUE;  /* Set UART1_CR5 to reset value 0x00 */
      00001E 35 00 52 38      [ 1]   97 	mov	0x5238+0, #0x00
                                     98 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 69: UART1->GTR = UART1_GTR_RESET_VALUE;
      000022 35 00 52 39      [ 1]   99 	mov	0x5239+0, #0x00
                                    100 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 70: UART1->PSCR = UART1_PSCR_RESET_VALUE;
      000026 35 00 52 3A      [ 1]  101 	mov	0x523a+0, #0x00
                                    102 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 71: }
      00002A 81               [ 4]  103 	ret
                                    104 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 90: void UART1_Init(uint32_t BaudRate, UART1_WordLength_TypeDef WordLength, 
                                    105 ;	-----------------------------------------
                                    106 ;	 function UART1_Init
                                    107 ;	-----------------------------------------
      00002B                        108 _UART1_Init:
      00002B 52 0D            [ 2]  109 	sub	sp, #13
                                    110 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 97: assert_param(IS_UART1_BAUDRATE_OK(BaudRate));
      00002D AE 89 68         [ 2]  111 	ldw	x, #0x8968
      000030 13 12            [ 2]  112 	cpw	x, (0x12, sp)
      000032 A6 09            [ 1]  113 	ld	a, #0x09
      000034 12 11            [ 1]  114 	sbc	a, (0x11, sp)
      000036 4F               [ 1]  115 	clr	a
      000037 12 10            [ 1]  116 	sbc	a, (0x10, sp)
      000039 24 0F            [ 1]  117 	jrnc	00113$
      00003B 4B 61            [ 1]  118 	push	#0x61
      00003D 5F               [ 1]  119 	clrw	x
      00003E 89               [ 2]  120 	pushw	x
      00003F 4B 00            [ 1]  121 	push	#0x00
      000041 4Br00            [ 1]  122 	push	#<(___str_0+0)
      000043 4Bs00            [ 1]  123 	push	#((___str_0+0) >> 8)
      000045 CDr00r00         [ 4]  124 	call	_assert_failed
      000048 5B 06            [ 2]  125 	addw	sp, #6
      00004A                        126 00113$:
                                    127 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 98: assert_param(IS_UART1_WORDLENGTH_OK(WordLength));
      00004A 0D 14            [ 1]  128 	tnz	(0x14, sp)
      00004C 27 15            [ 1]  129 	jreq	00115$
      00004E 7B 14            [ 1]  130 	ld	a, (0x14, sp)
      000050 A1 10            [ 1]  131 	cp	a, #0x10
      000052 27 0F            [ 1]  132 	jreq	00115$
      000054 4B 62            [ 1]  133 	push	#0x62
      000056 5F               [ 1]  134 	clrw	x
      000057 89               [ 2]  135 	pushw	x
      000058 4B 00            [ 1]  136 	push	#0x00
      00005A 4Br00            [ 1]  137 	push	#<(___str_0+0)
      00005C 4Bs00            [ 1]  138 	push	#((___str_0+0) >> 8)
      00005E CDr00r00         [ 4]  139 	call	_assert_failed
      000061 5B 06            [ 2]  140 	addw	sp, #6
      000063                        141 00115$:
                                    142 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 99: assert_param(IS_UART1_STOPBITS_OK(StopBits));
      000063 0D 15            [ 1]  143 	tnz	(0x15, sp)
      000065 27 21            [ 1]  144 	jreq	00120$
      000067 7B 15            [ 1]  145 	ld	a, (0x15, sp)
      000069 A1 10            [ 1]  146 	cp	a, #0x10
      00006B 27 1B            [ 1]  147 	jreq	00120$
      00006D 7B 15            [ 1]  148 	ld	a, (0x15, sp)
      00006F A1 20            [ 1]  149 	cp	a, #0x20
      000071 27 15            [ 1]  150 	jreq	00120$
      000073 7B 15            [ 1]  151 	ld	a, (0x15, sp)
      000075 A1 30            [ 1]  152 	cp	a, #0x30
      000077 27 0F            [ 1]  153 	jreq	00120$
      000079 4B 63            [ 1]  154 	push	#0x63
      00007B 5F               [ 1]  155 	clrw	x
      00007C 89               [ 2]  156 	pushw	x
      00007D 4B 00            [ 1]  157 	push	#0x00
      00007F 4Br00            [ 1]  158 	push	#<(___str_0+0)
      000081 4Bs00            [ 1]  159 	push	#((___str_0+0) >> 8)
      000083 CDr00r00         [ 4]  160 	call	_assert_failed
      000086 5B 06            [ 2]  161 	addw	sp, #6
      000088                        162 00120$:
                                    163 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 100: assert_param(IS_UART1_PARITY_OK(Parity));
      000088 0D 16            [ 1]  164 	tnz	(0x16, sp)
      00008A 27 1B            [ 1]  165 	jreq	00131$
      00008C 7B 16            [ 1]  166 	ld	a, (0x16, sp)
      00008E A1 04            [ 1]  167 	cp	a, #0x04
      000090 27 15            [ 1]  168 	jreq	00131$
      000092 7B 16            [ 1]  169 	ld	a, (0x16, sp)
      000094 A1 06            [ 1]  170 	cp	a, #0x06
      000096 27 0F            [ 1]  171 	jreq	00131$
      000098 4B 64            [ 1]  172 	push	#0x64
      00009A 5F               [ 1]  173 	clrw	x
      00009B 89               [ 2]  174 	pushw	x
      00009C 4B 00            [ 1]  175 	push	#0x00
      00009E 4Br00            [ 1]  176 	push	#<(___str_0+0)
      0000A0 4Bs00            [ 1]  177 	push	#((___str_0+0) >> 8)
      0000A2 CDr00r00         [ 4]  178 	call	_assert_failed
      0000A5 5B 06            [ 2]  179 	addw	sp, #6
      0000A7                        180 00131$:
                                    181 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 101: assert_param(IS_UART1_MODE_OK((uint8_t)Mode));
      0000A7 7B 18            [ 1]  182 	ld	a, (0x18, sp)
      0000A9 A1 08            [ 1]  183 	cp	a, #0x08
      0000AB 27 42            [ 1]  184 	jreq	00139$
      0000AD 7B 18            [ 1]  185 	ld	a, (0x18, sp)
      0000AF A1 40            [ 1]  186 	cp	a, #0x40
      0000B1 27 3C            [ 1]  187 	jreq	00139$
      0000B3 7B 18            [ 1]  188 	ld	a, (0x18, sp)
      0000B5 A1 04            [ 1]  189 	cp	a, #0x04
      0000B7 27 36            [ 1]  190 	jreq	00139$
      0000B9 7B 18            [ 1]  191 	ld	a, (0x18, sp)
      0000BB A1 80            [ 1]  192 	cp	a, #0x80
      0000BD 27 30            [ 1]  193 	jreq	00139$
      0000BF 7B 18            [ 1]  194 	ld	a, (0x18, sp)
      0000C1 A0 0C            [ 1]  195 	sub	a, #0x0c
      0000C3 26 02            [ 1]  196 	jrne	00339$
      0000C5 4C               [ 1]  197 	inc	a
      0000C6 21                     198 	.byte 0x21
      0000C7                        199 00339$:
      0000C7 4F               [ 1]  200 	clr	a
      0000C8                        201 00340$:
      0000C8 4D               [ 1]  202 	tnz	a
      0000C9 26 24            [ 1]  203 	jrne	00139$
      0000CB 4D               [ 1]  204 	tnz	a
      0000CC 26 21            [ 1]  205 	jrne	00139$
      0000CE 7B 18            [ 1]  206 	ld	a, (0x18, sp)
      0000D0 A1 44            [ 1]  207 	cp	a, #0x44
      0000D2 27 1B            [ 1]  208 	jreq	00139$
      0000D4 7B 18            [ 1]  209 	ld	a, (0x18, sp)
      0000D6 A1 C0            [ 1]  210 	cp	a, #0xc0
      0000D8 27 15            [ 1]  211 	jreq	00139$
      0000DA 7B 18            [ 1]  212 	ld	a, (0x18, sp)
      0000DC A1 88            [ 1]  213 	cp	a, #0x88
      0000DE 27 0F            [ 1]  214 	jreq	00139$
      0000E0 4B 65            [ 1]  215 	push	#0x65
      0000E2 5F               [ 1]  216 	clrw	x
      0000E3 89               [ 2]  217 	pushw	x
      0000E4 4B 00            [ 1]  218 	push	#0x00
      0000E6 4Br00            [ 1]  219 	push	#<(___str_0+0)
      0000E8 4Bs00            [ 1]  220 	push	#((___str_0+0) >> 8)
      0000EA CDr00r00         [ 4]  221 	call	_assert_failed
      0000ED 5B 06            [ 2]  222 	addw	sp, #6
      0000EF                        223 00139$:
                                    224 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 102: assert_param(IS_UART1_SYNCMODE_OK((uint8_t)SyncMode));
      0000EF 7B 17            [ 1]  225 	ld	a, (0x17, sp)
      0000F1 A4 88            [ 1]  226 	and	a, #0x88
      0000F3 A1 88            [ 1]  227 	cp	a, #0x88
      0000F5 27 18            [ 1]  228 	jreq	00167$
      0000F7 7B 17            [ 1]  229 	ld	a, (0x17, sp)
      0000F9 A4 44            [ 1]  230 	and	a, #0x44
      0000FB A1 44            [ 1]  231 	cp	a, #0x44
      0000FD 27 10            [ 1]  232 	jreq	00167$
      0000FF 7B 17            [ 1]  233 	ld	a, (0x17, sp)
      000101 A4 22            [ 1]  234 	and	a, #0x22
      000103 A1 22            [ 1]  235 	cp	a, #0x22
      000105 27 08            [ 1]  236 	jreq	00167$
      000107 7B 17            [ 1]  237 	ld	a, (0x17, sp)
      000109 A4 11            [ 1]  238 	and	a, #0x11
      00010B A1 11            [ 1]  239 	cp	a, #0x11
      00010D 26 0F            [ 1]  240 	jrne	00165$
      00010F                        241 00167$:
      00010F 4B 66            [ 1]  242 	push	#0x66
      000111 5F               [ 1]  243 	clrw	x
      000112 89               [ 2]  244 	pushw	x
      000113 4B 00            [ 1]  245 	push	#0x00
      000115 4Br00            [ 1]  246 	push	#<(___str_0+0)
      000117 4Bs00            [ 1]  247 	push	#((___str_0+0) >> 8)
      000119 CDr00r00         [ 4]  248 	call	_assert_failed
      00011C 5B 06            [ 2]  249 	addw	sp, #6
      00011E                        250 00165$:
                                    251 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 105: UART1->CR1 &= (uint8_t)(~UART1_CR1_M);  
      00011E 72 19 52 34      [ 1]  252 	bres	21044, #4
                                    253 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 108: UART1->CR1 |= (uint8_t)WordLength;
      000122 C6 52 34         [ 1]  254 	ld	a, 0x5234
      000125 1A 14            [ 1]  255 	or	a, (0x14, sp)
      000127 C7 52 34         [ 1]  256 	ld	0x5234, a
                                    257 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 111: UART1->CR3 &= (uint8_t)(~UART1_CR3_STOP);  
      00012A C6 52 36         [ 1]  258 	ld	a, 0x5236
      00012D A4 CF            [ 1]  259 	and	a, #0xcf
      00012F C7 52 36         [ 1]  260 	ld	0x5236, a
                                    261 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 113: UART1->CR3 |= (uint8_t)StopBits;  
      000132 C6 52 36         [ 1]  262 	ld	a, 0x5236
      000135 1A 15            [ 1]  263 	or	a, (0x15, sp)
      000137 C7 52 36         [ 1]  264 	ld	0x5236, a
                                    265 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 116: UART1->CR1 &= (uint8_t)(~(UART1_CR1_PCEN | UART1_CR1_PS  ));  
      00013A C6 52 34         [ 1]  266 	ld	a, 0x5234
      00013D A4 F9            [ 1]  267 	and	a, #0xf9
      00013F C7 52 34         [ 1]  268 	ld	0x5234, a
                                    269 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 118: UART1->CR1 |= (uint8_t)Parity;  
      000142 C6 52 34         [ 1]  270 	ld	a, 0x5234
      000145 1A 16            [ 1]  271 	or	a, (0x16, sp)
      000147 C7 52 34         [ 1]  272 	ld	0x5234, a
                                    273 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 121: UART1->BRR1 &= (uint8_t)(~UART1_BRR1_DIVM);  
      00014A C6 52 32         [ 1]  274 	ld	a, 0x5232
      00014D 35 00 52 32      [ 1]  275 	mov	0x5232+0, #0x00
                                    276 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 123: UART1->BRR2 &= (uint8_t)(~UART1_BRR2_DIVM);  
      000151 C6 52 33         [ 1]  277 	ld	a, 0x5233
      000154 A4 0F            [ 1]  278 	and	a, #0x0f
      000156 C7 52 33         [ 1]  279 	ld	0x5233, a
                                    280 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 125: UART1->BRR2 &= (uint8_t)(~UART1_BRR2_DIVF);  
      000159 C6 52 33         [ 1]  281 	ld	a, 0x5233
      00015C A4 F0            [ 1]  282 	and	a, #0xf0
      00015E C7 52 33         [ 1]  283 	ld	0x5233, a
                                    284 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 128: BaudRate_Mantissa    = ((uint32_t)CLK_GetClockFreq() / (BaudRate << 4));
      000161 CDr00r00         [ 4]  285 	call	_CLK_GetClockFreq
      000164 1F 0C            [ 2]  286 	ldw	(0x0c, sp), x
      000166 1E 10            [ 2]  287 	ldw	x, (0x10, sp)
      000168 1F 06            [ 2]  288 	ldw	(0x06, sp), x
      00016A 1E 12            [ 2]  289 	ldw	x, (0x12, sp)
      00016C A6 04            [ 1]  290 	ld	a, #0x04
      00016E                        291 00364$:
      00016E 58               [ 2]  292 	sllw	x
      00016F 09 07            [ 1]  293 	rlc	(0x07, sp)
      000171 09 06            [ 1]  294 	rlc	(0x06, sp)
      000173 4A               [ 1]  295 	dec	a
      000174 26 F8            [ 1]  296 	jrne	00364$
      000176 1F 08            [ 2]  297 	ldw	(0x08, sp), x
      000178 89               [ 2]  298 	pushw	x
      000179 1E 08            [ 2]  299 	ldw	x, (0x08, sp)
      00017B 89               [ 2]  300 	pushw	x
      00017C 1E 10            [ 2]  301 	ldw	x, (0x10, sp)
      00017E 89               [ 2]  302 	pushw	x
      00017F 90 89            [ 2]  303 	pushw	y
      000181 CDr00r00         [ 4]  304 	call	__divulong
      000184 5B 08            [ 2]  305 	addw	sp, #8
      000186 1F 03            [ 2]  306 	ldw	(0x03, sp), x
      000188 17 01            [ 2]  307 	ldw	(0x01, sp), y
                                    308 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 129: BaudRate_Mantissa100 = (((uint32_t)CLK_GetClockFreq() * 100) / (BaudRate << 4));
      00018A CDr00r00         [ 4]  309 	call	_CLK_GetClockFreq
      00018D 89               [ 2]  310 	pushw	x
      00018E 90 89            [ 2]  311 	pushw	y
      000190 4B 64            [ 1]  312 	push	#0x64
      000192 5F               [ 1]  313 	clrw	x
      000193 89               [ 2]  314 	pushw	x
      000194 4B 00            [ 1]  315 	push	#0x00
      000196 CDr00r00         [ 4]  316 	call	__mullong
      000199 5B 08            [ 2]  317 	addw	sp, #8
      00019B 1F 0C            [ 2]  318 	ldw	(0x0c, sp), x
      00019D 1E 08            [ 2]  319 	ldw	x, (0x08, sp)
      00019F 89               [ 2]  320 	pushw	x
      0001A0 1E 08            [ 2]  321 	ldw	x, (0x08, sp)
      0001A2 89               [ 2]  322 	pushw	x
      0001A3 1E 10            [ 2]  323 	ldw	x, (0x10, sp)
      0001A5 89               [ 2]  324 	pushw	x
      0001A6 90 89            [ 2]  325 	pushw	y
      0001A8 CDr00r00         [ 4]  326 	call	__divulong
      0001AB 5B 08            [ 2]  327 	addw	sp, #8
      0001AD 90 9E            [ 1]  328 	ld	a, yh
      0001AF 1F 07            [ 2]  329 	ldw	(0x07, sp), x
      0001B1 6B 05            [ 1]  330 	ld	(0x05, sp), a
      0001B3 90 9F            [ 1]  331 	ld	a, yl
                                    332 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 131: UART1->BRR2 |= (uint8_t)((uint8_t)(((BaudRate_Mantissa100 - (BaudRate_Mantissa * 100)) << 4) / 100) & (uint8_t)0x0F); 
      0001B5 AE 52 33         [ 2]  333 	ldw	x, #0x5233
      0001B8 88               [ 1]  334 	push	a
      0001B9 F6               [ 1]  335 	ld	a, (x)
      0001BA 6B 0A            [ 1]  336 	ld	(0x0a, sp), a
      0001BC 1E 04            [ 2]  337 	ldw	x, (0x04, sp)
      0001BE 89               [ 2]  338 	pushw	x
      0001BF 1E 04            [ 2]  339 	ldw	x, (0x04, sp)
      0001C1 89               [ 2]  340 	pushw	x
      0001C2 4B 64            [ 1]  341 	push	#0x64
      0001C4 5F               [ 1]  342 	clrw	x
      0001C5 89               [ 2]  343 	pushw	x
      0001C6 4B 00            [ 1]  344 	push	#0x00
      0001C8 CDr00r00         [ 4]  345 	call	__mullong
      0001CB 5B 08            [ 2]  346 	addw	sp, #8
      0001CD 1F 0D            [ 2]  347 	ldw	(0x0d, sp), x
      0001CF 17 0B            [ 2]  348 	ldw	(0x0b, sp), y
      0001D1 84               [ 1]  349 	pop	a
      0001D2 16 07            [ 2]  350 	ldw	y, (0x07, sp)
      0001D4 72 F2 0C         [ 2]  351 	subw	y, (0x0c, sp)
      0001D7 12 0B            [ 1]  352 	sbc	a, (0x0b, sp)
      0001D9 97               [ 1]  353 	ld	xl, a
      0001DA 7B 05            [ 1]  354 	ld	a, (0x05, sp)
      0001DC 12 0A            [ 1]  355 	sbc	a, (0x0a, sp)
      0001DE 95               [ 1]  356 	ld	xh, a
      0001DF A6 04            [ 1]  357 	ld	a, #0x04
      0001E1                        358 00366$:
      0001E1 90 58            [ 2]  359 	sllw	y
      0001E3 59               [ 2]  360 	rlcw	x
      0001E4 4A               [ 1]  361 	dec	a
      0001E5 26 FA            [ 1]  362 	jrne	00366$
      0001E7 4B 64            [ 1]  363 	push	#0x64
      0001E9 4B 00            [ 1]  364 	push	#0x00
      0001EB 4B 00            [ 1]  365 	push	#0x00
      0001ED 4B 00            [ 1]  366 	push	#0x00
      0001EF 90 89            [ 2]  367 	pushw	y
      0001F1 89               [ 2]  368 	pushw	x
      0001F2 CDr00r00         [ 4]  369 	call	__divulong
      0001F5 5B 08            [ 2]  370 	addw	sp, #8
      0001F7 9F               [ 1]  371 	ld	a, xl
      0001F8 A4 0F            [ 1]  372 	and	a, #0x0f
      0001FA 1A 09            [ 1]  373 	or	a, (0x09, sp)
      0001FC C7 52 33         [ 1]  374 	ld	0x5233, a
                                    375 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 133: UART1->BRR2 |= (uint8_t)((BaudRate_Mantissa >> 4) & (uint8_t)0xF0); 
      0001FF C6 52 33         [ 1]  376 	ld	a, 0x5233
      000202 6B 0D            [ 1]  377 	ld	(0x0d, sp), a
      000204 1E 03            [ 2]  378 	ldw	x, (0x03, sp)
      000206 A6 10            [ 1]  379 	ld	a, #0x10
      000208 62               [ 2]  380 	div	x, a
      000209 9F               [ 1]  381 	ld	a, xl
      00020A A4 F0            [ 1]  382 	and	a, #0xf0
      00020C 1A 0D            [ 1]  383 	or	a, (0x0d, sp)
      00020E C7 52 33         [ 1]  384 	ld	0x5233, a
                                    385 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 135: UART1->BRR1 |= (uint8_t)BaudRate_Mantissa;           
      000211 C6 52 32         [ 1]  386 	ld	a, 0x5232
      000214 6B 0D            [ 1]  387 	ld	(0x0d, sp), a
      000216 7B 04            [ 1]  388 	ld	a, (0x04, sp)
      000218 1A 0D            [ 1]  389 	or	a, (0x0d, sp)
      00021A C7 52 32         [ 1]  390 	ld	0x5232, a
                                    391 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 138: UART1->CR2 &= (uint8_t)~(UART1_CR2_TEN | UART1_CR2_REN); 
      00021D C6 52 35         [ 1]  392 	ld	a, 0x5235
      000220 A4 F3            [ 1]  393 	and	a, #0xf3
      000222 C7 52 35         [ 1]  394 	ld	0x5235, a
                                    395 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 140: UART1->CR3 &= (uint8_t)~(UART1_CR3_CPOL | UART1_CR3_CPHA | UART1_CR3_LBCL); 
      000225 C6 52 36         [ 1]  396 	ld	a, 0x5236
      000228 A4 F8            [ 1]  397 	and	a, #0xf8
      00022A C7 52 36         [ 1]  398 	ld	0x5236, a
                                    399 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 142: UART1->CR3 |= (uint8_t)((uint8_t)SyncMode & (uint8_t)(UART1_CR3_CPOL | 
      00022D C6 52 36         [ 1]  400 	ld	a, 0x5236
      000230 6B 0D            [ 1]  401 	ld	(0x0d, sp), a
      000232 7B 17            [ 1]  402 	ld	a, (0x17, sp)
      000234 A4 07            [ 1]  403 	and	a, #0x07
      000236 1A 0D            [ 1]  404 	or	a, (0x0d, sp)
      000238 C7 52 36         [ 1]  405 	ld	0x5236, a
                                    406 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 138: UART1->CR2 &= (uint8_t)~(UART1_CR2_TEN | UART1_CR2_REN); 
      00023B C6 52 35         [ 1]  407 	ld	a, 0x5235
                                    408 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 145: if ((uint8_t)(Mode & UART1_MODE_TX_ENABLE))
      00023E 88               [ 1]  409 	push	a
      00023F 7B 19            [ 1]  410 	ld	a, (0x19, sp)
      000241 A5 04            [ 1]  411 	bcp	a, #0x04
      000243 84               [ 1]  412 	pop	a
      000244 27 07            [ 1]  413 	jreq	00102$
                                    414 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 148: UART1->CR2 |= (uint8_t)UART1_CR2_TEN;  
      000246 AA 08            [ 1]  415 	or	a, #0x08
      000248 C7 52 35         [ 1]  416 	ld	0x5235, a
      00024B 20 05            [ 2]  417 	jra	00103$
      00024D                        418 00102$:
                                    419 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 153: UART1->CR2 &= (uint8_t)(~UART1_CR2_TEN);  
      00024D A4 F7            [ 1]  420 	and	a, #0xf7
      00024F C7 52 35         [ 1]  421 	ld	0x5235, a
      000252                        422 00103$:
                                    423 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 138: UART1->CR2 &= (uint8_t)~(UART1_CR2_TEN | UART1_CR2_REN); 
      000252 C6 52 35         [ 1]  424 	ld	a, 0x5235
                                    425 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 155: if ((uint8_t)(Mode & UART1_MODE_RX_ENABLE))
      000255 88               [ 1]  426 	push	a
      000256 7B 19            [ 1]  427 	ld	a, (0x19, sp)
      000258 A5 08            [ 1]  428 	bcp	a, #0x08
      00025A 84               [ 1]  429 	pop	a
      00025B 27 07            [ 1]  430 	jreq	00105$
                                    431 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 158: UART1->CR2 |= (uint8_t)UART1_CR2_REN;  
      00025D AA 04            [ 1]  432 	or	a, #0x04
      00025F C7 52 35         [ 1]  433 	ld	0x5235, a
      000262 20 05            [ 2]  434 	jra	00106$
      000264                        435 00105$:
                                    436 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 163: UART1->CR2 &= (uint8_t)(~UART1_CR2_REN);  
      000264 A4 FB            [ 1]  437 	and	a, #0xfb
      000266 C7 52 35         [ 1]  438 	ld	0x5235, a
      000269                        439 00106$:
                                    440 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 111: UART1->CR3 &= (uint8_t)(~UART1_CR3_STOP);  
      000269 C6 52 36         [ 1]  441 	ld	a, 0x5236
                                    442 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 167: if ((uint8_t)(SyncMode & UART1_SYNCMODE_CLOCK_DISABLE))
      00026C 0D 17            [ 1]  443 	tnz	(0x17, sp)
      00026E 2A 07            [ 1]  444 	jrpl	00108$
                                    445 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 170: UART1->CR3 &= (uint8_t)(~UART1_CR3_CKEN); 
      000270 A4 F7            [ 1]  446 	and	a, #0xf7
      000272 C7 52 36         [ 1]  447 	ld	0x5236, a
      000275 20 0D            [ 2]  448 	jra	00110$
      000277                        449 00108$:
                                    450 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 174: UART1->CR3 |= (uint8_t)((uint8_t)SyncMode & UART1_CR3_CKEN);
      000277 88               [ 1]  451 	push	a
      000278 7B 18            [ 1]  452 	ld	a, (0x18, sp)
      00027A A4 08            [ 1]  453 	and	a, #0x08
      00027C 6B 0E            [ 1]  454 	ld	(0x0e, sp), a
      00027E 84               [ 1]  455 	pop	a
      00027F 1A 0D            [ 1]  456 	or	a, (0x0d, sp)
      000281 C7 52 36         [ 1]  457 	ld	0x5236, a
      000284                        458 00110$:
                                    459 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 176: }
      000284 5B 0D            [ 2]  460 	addw	sp, #13
      000286 81               [ 4]  461 	ret
                                    462 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 184: void UART1_Cmd(FunctionalState NewState)
                                    463 ;	-----------------------------------------
                                    464 ;	 function UART1_Cmd
                                    465 ;	-----------------------------------------
      000287                        466 _UART1_Cmd:
                                    467 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 189: UART1->CR1 &= (uint8_t)(~UART1_CR1_UARTD); 
      000287 C6 52 34         [ 1]  468 	ld	a, 0x5234
                                    469 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 186: if (NewState != DISABLE)
      00028A 0D 03            [ 1]  470 	tnz	(0x03, sp)
      00028C 27 06            [ 1]  471 	jreq	00102$
                                    472 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 189: UART1->CR1 &= (uint8_t)(~UART1_CR1_UARTD); 
      00028E A4 DF            [ 1]  473 	and	a, #0xdf
      000290 C7 52 34         [ 1]  474 	ld	0x5234, a
      000293 81               [ 4]  475 	ret
      000294                        476 00102$:
                                    477 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 194: UART1->CR1 |= UART1_CR1_UARTD;  
      000294 AA 20            [ 1]  478 	or	a, #0x20
      000296 C7 52 34         [ 1]  479 	ld	0x5234, a
                                    480 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 196: }
      000299 81               [ 4]  481 	ret
                                    482 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 211: void UART1_ITConfig(UART1_IT_TypeDef UART1_IT, FunctionalState NewState)
                                    483 ;	-----------------------------------------
                                    484 ;	 function UART1_ITConfig
                                    485 ;	-----------------------------------------
      00029A                        486 _UART1_ITConfig:
      00029A 89               [ 2]  487 	pushw	x
                                    488 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 216: assert_param(IS_UART1_CONFIG_IT_OK(UART1_IT));
      00029B 1E 05            [ 2]  489 	ldw	x, (0x05, sp)
      00029D A3 01 00         [ 2]  490 	cpw	x, #0x0100
      0002A0 27 2C            [ 1]  491 	jreq	00119$
      0002A2 A3 02 77         [ 2]  492 	cpw	x, #0x0277
      0002A5 27 27            [ 1]  493 	jreq	00119$
      0002A7 A3 02 66         [ 2]  494 	cpw	x, #0x0266
      0002AA 27 22            [ 1]  495 	jreq	00119$
      0002AC A3 02 05         [ 2]  496 	cpw	x, #0x0205
      0002AF 27 1D            [ 1]  497 	jreq	00119$
      0002B1 A3 02 44         [ 2]  498 	cpw	x, #0x0244
      0002B4 27 18            [ 1]  499 	jreq	00119$
      0002B6 A3 03 46         [ 2]  500 	cpw	x, #0x0346
      0002B9 27 13            [ 1]  501 	jreq	00119$
      0002BB 89               [ 2]  502 	pushw	x
      0002BC 4B D8            [ 1]  503 	push	#0xd8
      0002BE 4B 00            [ 1]  504 	push	#0x00
      0002C0 4B 00            [ 1]  505 	push	#0x00
      0002C2 4B 00            [ 1]  506 	push	#0x00
      0002C4 4Br00            [ 1]  507 	push	#<(___str_0+0)
      0002C6 4Bs00            [ 1]  508 	push	#((___str_0+0) >> 8)
      0002C8 CDr00r00         [ 4]  509 	call	_assert_failed
      0002CB 5B 06            [ 2]  510 	addw	sp, #6
      0002CD 85               [ 2]  511 	popw	x
      0002CE                        512 00119$:
                                    513 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 217: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0002CE 0D 07            [ 1]  514 	tnz	(0x07, sp)
      0002D0 27 18            [ 1]  515 	jreq	00136$
      0002D2 7B 07            [ 1]  516 	ld	a, (0x07, sp)
      0002D4 4A               [ 1]  517 	dec	a
      0002D5 27 13            [ 1]  518 	jreq	00136$
      0002D7 89               [ 2]  519 	pushw	x
      0002D8 4B D9            [ 1]  520 	push	#0xd9
      0002DA 4B 00            [ 1]  521 	push	#0x00
      0002DC 4B 00            [ 1]  522 	push	#0x00
      0002DE 4B 00            [ 1]  523 	push	#0x00
      0002E0 4Br00            [ 1]  524 	push	#<(___str_0+0)
      0002E2 4Bs00            [ 1]  525 	push	#((___str_0+0) >> 8)
      0002E4 CDr00r00         [ 4]  526 	call	_assert_failed
      0002E7 5B 06            [ 2]  527 	addw	sp, #6
      0002E9 85               [ 2]  528 	popw	x
      0002EA                        529 00136$:
                                    530 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 220: uartreg = (uint8_t)((uint16_t)UART1_IT >> 0x08);
                                    531 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 222: itpos = (uint8_t)((uint8_t)1 << (uint8_t)((uint8_t)UART1_IT & (uint8_t)0x0F));
      0002EA 7B 06            [ 1]  532 	ld	a, (0x06, sp)
      0002EC A4 0F            [ 1]  533 	and	a, #0x0f
      0002EE 88               [ 1]  534 	push	a
      0002EF A6 01            [ 1]  535 	ld	a, #0x01
      0002F1 6B 03            [ 1]  536 	ld	(0x03, sp), a
      0002F3 84               [ 1]  537 	pop	a
      0002F4 4D               [ 1]  538 	tnz	a
      0002F5 27 05            [ 1]  539 	jreq	00228$
      0002F7                        540 00227$:
      0002F7 08 02            [ 1]  541 	sll	(0x02, sp)
      0002F9 4A               [ 1]  542 	dec	a
      0002FA 26 FB            [ 1]  543 	jrne	00227$
      0002FC                        544 00228$:
                                    545 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 227: if (uartreg == 0x01)
      0002FC 9E               [ 1]  546 	ld	a, xh
      0002FD 4A               [ 1]  547 	dec	a
      0002FE 26 05            [ 1]  548 	jrne	00230$
      000300 A6 01            [ 1]  549 	ld	a, #0x01
      000302 6B 01            [ 1]  550 	ld	(0x01, sp), a
      000304 C5                     551 	.byte 0xc5
      000305                        552 00230$:
      000305 0F 01            [ 1]  553 	clr	(0x01, sp)
      000307                        554 00231$:
                                    555 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 231: else if (uartreg == 0x02)
      000307 9E               [ 1]  556 	ld	a, xh
      000308 A0 02            [ 1]  557 	sub	a, #0x02
      00030A 26 02            [ 1]  558 	jrne	00233$
      00030C 4C               [ 1]  559 	inc	a
      00030D 21                     560 	.byte 0x21
      00030E                        561 00233$:
      00030E 4F               [ 1]  562 	clr	a
      00030F                        563 00234$:
                                    564 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 224: if (NewState != DISABLE)
      00030F 0D 07            [ 1]  565 	tnz	(0x07, sp)
      000311 27 25            [ 1]  566 	jreq	00114$
                                    567 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 227: if (uartreg == 0x01)
      000313 0D 01            [ 1]  568 	tnz	(0x01, sp)
      000315 27 0A            [ 1]  569 	jreq	00105$
                                    570 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 229: UART1->CR1 |= itpos;
      000317 C6 52 34         [ 1]  571 	ld	a, 0x5234
      00031A 1A 02            [ 1]  572 	or	a, (0x02, sp)
      00031C C7 52 34         [ 1]  573 	ld	0x5234, a
      00031F 20 3E            [ 2]  574 	jra	00116$
      000321                        575 00105$:
                                    576 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 231: else if (uartreg == 0x02)
      000321 4D               [ 1]  577 	tnz	a
      000322 27 0A            [ 1]  578 	jreq	00102$
                                    579 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 233: UART1->CR2 |= itpos;
      000324 C6 52 35         [ 1]  580 	ld	a, 0x5235
      000327 1A 02            [ 1]  581 	or	a, (0x02, sp)
      000329 C7 52 35         [ 1]  582 	ld	0x5235, a
      00032C 20 31            [ 2]  583 	jra	00116$
      00032E                        584 00102$:
                                    585 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 237: UART1->CR4 |= itpos;
      00032E C6 52 37         [ 1]  586 	ld	a, 0x5237
      000331 1A 02            [ 1]  587 	or	a, (0x02, sp)
      000333 C7 52 37         [ 1]  588 	ld	0x5237, a
      000336 20 27            [ 2]  589 	jra	00116$
      000338                        590 00114$:
                                    591 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 245: UART1->CR1 &= (uint8_t)(~itpos);
      000338 88               [ 1]  592 	push	a
      000339 03 03            [ 1]  593 	cpl	(0x03, sp)
      00033B 84               [ 1]  594 	pop	a
                                    595 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 243: if (uartreg == 0x01)
      00033C 0D 01            [ 1]  596 	tnz	(0x01, sp)
      00033E 27 0A            [ 1]  597 	jreq	00111$
                                    598 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 245: UART1->CR1 &= (uint8_t)(~itpos);
      000340 C6 52 34         [ 1]  599 	ld	a, 0x5234
      000343 14 02            [ 1]  600 	and	a, (0x02, sp)
      000345 C7 52 34         [ 1]  601 	ld	0x5234, a
      000348 20 15            [ 2]  602 	jra	00116$
      00034A                        603 00111$:
                                    604 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 247: else if (uartreg == 0x02)
      00034A 4D               [ 1]  605 	tnz	a
      00034B 27 0A            [ 1]  606 	jreq	00108$
                                    607 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 249: UART1->CR2 &= (uint8_t)(~itpos);
      00034D C6 52 35         [ 1]  608 	ld	a, 0x5235
      000350 14 02            [ 1]  609 	and	a, (0x02, sp)
      000352 C7 52 35         [ 1]  610 	ld	0x5235, a
      000355 20 08            [ 2]  611 	jra	00116$
      000357                        612 00108$:
                                    613 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 253: UART1->CR4 &= (uint8_t)(~itpos);
      000357 C6 52 37         [ 1]  614 	ld	a, 0x5237
      00035A 14 02            [ 1]  615 	and	a, (0x02, sp)
      00035C C7 52 37         [ 1]  616 	ld	0x5237, a
      00035F                        617 00116$:
                                    618 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 257: }
      00035F 85               [ 2]  619 	popw	x
      000360 81               [ 4]  620 	ret
                                    621 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 265: void UART1_HalfDuplexCmd(FunctionalState NewState)
                                    622 ;	-----------------------------------------
                                    623 ;	 function UART1_HalfDuplexCmd
                                    624 ;	-----------------------------------------
      000361                        625 _UART1_HalfDuplexCmd:
                                    626 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 267: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000361 0D 03            [ 1]  627 	tnz	(0x03, sp)
      000363 27 14            [ 1]  628 	jreq	00107$
      000365 7B 03            [ 1]  629 	ld	a, (0x03, sp)
      000367 4A               [ 1]  630 	dec	a
      000368 27 0F            [ 1]  631 	jreq	00107$
      00036A 4B 0B            [ 1]  632 	push	#0x0b
      00036C 4B 01            [ 1]  633 	push	#0x01
      00036E 5F               [ 1]  634 	clrw	x
      00036F 89               [ 2]  635 	pushw	x
      000370 4Br00            [ 1]  636 	push	#<(___str_0+0)
      000372 4Bs00            [ 1]  637 	push	#((___str_0+0) >> 8)
      000374 CDr00r00         [ 4]  638 	call	_assert_failed
      000377 5B 06            [ 2]  639 	addw	sp, #6
      000379                        640 00107$:
                                    641 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 271: UART1->CR5 |= UART1_CR5_HDSEL;  /**< UART1 Half Duplex Enable  */
      000379 C6 52 38         [ 1]  642 	ld	a, 0x5238
                                    643 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 269: if (NewState != DISABLE)
      00037C 0D 03            [ 1]  644 	tnz	(0x03, sp)
      00037E 27 06            [ 1]  645 	jreq	00102$
                                    646 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 271: UART1->CR5 |= UART1_CR5_HDSEL;  /**< UART1 Half Duplex Enable  */
      000380 AA 08            [ 1]  647 	or	a, #0x08
      000382 C7 52 38         [ 1]  648 	ld	0x5238, a
      000385 81               [ 4]  649 	ret
      000386                        650 00102$:
                                    651 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 275: UART1->CR5 &= (uint8_t)~UART1_CR5_HDSEL; /**< UART1 Half Duplex Disable */
      000386 A4 F7            [ 1]  652 	and	a, #0xf7
      000388 C7 52 38         [ 1]  653 	ld	0x5238, a
                                    654 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 277: }
      00038B 81               [ 4]  655 	ret
                                    656 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 285: void UART1_IrDAConfig(UART1_IrDAMode_TypeDef UART1_IrDAMode)
                                    657 ;	-----------------------------------------
                                    658 ;	 function UART1_IrDAConfig
                                    659 ;	-----------------------------------------
      00038C                        660 _UART1_IrDAConfig:
                                    661 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 287: assert_param(IS_UART1_IRDAMODE_OK(UART1_IrDAMode));
      00038C 7B 03            [ 1]  662 	ld	a, (0x03, sp)
      00038E 4A               [ 1]  663 	dec	a
      00038F 27 13            [ 1]  664 	jreq	00107$
      000391 0D 03            [ 1]  665 	tnz	(0x03, sp)
      000393 27 0F            [ 1]  666 	jreq	00107$
      000395 4B 1F            [ 1]  667 	push	#0x1f
      000397 4B 01            [ 1]  668 	push	#0x01
      000399 5F               [ 1]  669 	clrw	x
      00039A 89               [ 2]  670 	pushw	x
      00039B 4Br00            [ 1]  671 	push	#<(___str_0+0)
      00039D 4Bs00            [ 1]  672 	push	#((___str_0+0) >> 8)
      00039F CDr00r00         [ 4]  673 	call	_assert_failed
      0003A2 5B 06            [ 2]  674 	addw	sp, #6
      0003A4                        675 00107$:
                                    676 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 291: UART1->CR5 |= UART1_CR5_IRLP;
      0003A4 C6 52 38         [ 1]  677 	ld	a, 0x5238
                                    678 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 289: if (UART1_IrDAMode != UART1_IRDAMODE_NORMAL)
      0003A7 0D 03            [ 1]  679 	tnz	(0x03, sp)
      0003A9 27 06            [ 1]  680 	jreq	00102$
                                    681 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 291: UART1->CR5 |= UART1_CR5_IRLP;
      0003AB AA 04            [ 1]  682 	or	a, #0x04
      0003AD C7 52 38         [ 1]  683 	ld	0x5238, a
      0003B0 81               [ 4]  684 	ret
      0003B1                        685 00102$:
                                    686 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 295: UART1->CR5 &= ((uint8_t)~UART1_CR5_IRLP);
      0003B1 A4 FB            [ 1]  687 	and	a, #0xfb
      0003B3 C7 52 38         [ 1]  688 	ld	0x5238, a
                                    689 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 297: }
      0003B6 81               [ 4]  690 	ret
                                    691 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 305: void UART1_IrDACmd(FunctionalState NewState)
                                    692 ;	-----------------------------------------
                                    693 ;	 function UART1_IrDACmd
                                    694 ;	-----------------------------------------
      0003B7                        695 _UART1_IrDACmd:
                                    696 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 308: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0003B7 0D 03            [ 1]  697 	tnz	(0x03, sp)
      0003B9 27 14            [ 1]  698 	jreq	00107$
      0003BB 7B 03            [ 1]  699 	ld	a, (0x03, sp)
      0003BD 4A               [ 1]  700 	dec	a
      0003BE 27 0F            [ 1]  701 	jreq	00107$
      0003C0 4B 34            [ 1]  702 	push	#0x34
      0003C2 4B 01            [ 1]  703 	push	#0x01
      0003C4 5F               [ 1]  704 	clrw	x
      0003C5 89               [ 2]  705 	pushw	x
      0003C6 4Br00            [ 1]  706 	push	#<(___str_0+0)
      0003C8 4Bs00            [ 1]  707 	push	#((___str_0+0) >> 8)
      0003CA CDr00r00         [ 4]  708 	call	_assert_failed
      0003CD 5B 06            [ 2]  709 	addw	sp, #6
      0003CF                        710 00107$:
                                    711 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 313: UART1->CR5 |= UART1_CR5_IREN;
      0003CF C6 52 38         [ 1]  712 	ld	a, 0x5238
                                    713 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 310: if (NewState != DISABLE)
      0003D2 0D 03            [ 1]  714 	tnz	(0x03, sp)
      0003D4 27 06            [ 1]  715 	jreq	00102$
                                    716 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 313: UART1->CR5 |= UART1_CR5_IREN;
      0003D6 AA 02            [ 1]  717 	or	a, #0x02
      0003D8 C7 52 38         [ 1]  718 	ld	0x5238, a
      0003DB 81               [ 4]  719 	ret
      0003DC                        720 00102$:
                                    721 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 318: UART1->CR5 &= ((uint8_t)~UART1_CR5_IREN);
      0003DC A4 FD            [ 1]  722 	and	a, #0xfd
      0003DE C7 52 38         [ 1]  723 	ld	0x5238, a
                                    724 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 320: }
      0003E1 81               [ 4]  725 	ret
                                    726 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 329: void UART1_LINBreakDetectionConfig(UART1_LINBreakDetectionLength_TypeDef UART1_LINBreakDetectionLength)
                                    727 ;	-----------------------------------------
                                    728 ;	 function UART1_LINBreakDetectionConfig
                                    729 ;	-----------------------------------------
      0003E2                        730 _UART1_LINBreakDetectionConfig:
                                    731 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 331: assert_param(IS_UART1_LINBREAKDETECTIONLENGTH_OK(UART1_LINBreakDetectionLength));
      0003E2 0D 03            [ 1]  732 	tnz	(0x03, sp)
      0003E4 27 14            [ 1]  733 	jreq	00107$
      0003E6 7B 03            [ 1]  734 	ld	a, (0x03, sp)
      0003E8 4A               [ 1]  735 	dec	a
      0003E9 27 0F            [ 1]  736 	jreq	00107$
      0003EB 4B 4B            [ 1]  737 	push	#0x4b
      0003ED 4B 01            [ 1]  738 	push	#0x01
      0003EF 5F               [ 1]  739 	clrw	x
      0003F0 89               [ 2]  740 	pushw	x
      0003F1 4Br00            [ 1]  741 	push	#<(___str_0+0)
      0003F3 4Bs00            [ 1]  742 	push	#((___str_0+0) >> 8)
      0003F5 CDr00r00         [ 4]  743 	call	_assert_failed
      0003F8 5B 06            [ 2]  744 	addw	sp, #6
      0003FA                        745 00107$:
                                    746 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 335: UART1->CR4 |= UART1_CR4_LBDL;
      0003FA C6 52 37         [ 1]  747 	ld	a, 0x5237
                                    748 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 333: if (UART1_LINBreakDetectionLength != UART1_LINBREAKDETECTIONLENGTH_10BITS)
      0003FD 0D 03            [ 1]  749 	tnz	(0x03, sp)
      0003FF 27 06            [ 1]  750 	jreq	00102$
                                    751 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 335: UART1->CR4 |= UART1_CR4_LBDL;
      000401 AA 20            [ 1]  752 	or	a, #0x20
      000403 C7 52 37         [ 1]  753 	ld	0x5237, a
      000406 81               [ 4]  754 	ret
      000407                        755 00102$:
                                    756 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 339: UART1->CR4 &= ((uint8_t)~UART1_CR4_LBDL);
      000407 A4 DF            [ 1]  757 	and	a, #0xdf
      000409 C7 52 37         [ 1]  758 	ld	0x5237, a
                                    759 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 341: }
      00040C 81               [ 4]  760 	ret
                                    761 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 349: void UART1_LINCmd(FunctionalState NewState)
                                    762 ;	-----------------------------------------
                                    763 ;	 function UART1_LINCmd
                                    764 ;	-----------------------------------------
      00040D                        765 _UART1_LINCmd:
                                    766 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 351: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      00040D 0D 03            [ 1]  767 	tnz	(0x03, sp)
      00040F 27 14            [ 1]  768 	jreq	00107$
      000411 7B 03            [ 1]  769 	ld	a, (0x03, sp)
      000413 4A               [ 1]  770 	dec	a
      000414 27 0F            [ 1]  771 	jreq	00107$
      000416 4B 5F            [ 1]  772 	push	#0x5f
      000418 4B 01            [ 1]  773 	push	#0x01
      00041A 5F               [ 1]  774 	clrw	x
      00041B 89               [ 2]  775 	pushw	x
      00041C 4Br00            [ 1]  776 	push	#<(___str_0+0)
      00041E 4Bs00            [ 1]  777 	push	#((___str_0+0) >> 8)
      000420 CDr00r00         [ 4]  778 	call	_assert_failed
      000423 5B 06            [ 2]  779 	addw	sp, #6
      000425                        780 00107$:
                                    781 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 356: UART1->CR3 |= UART1_CR3_LINEN;
      000425 C6 52 36         [ 1]  782 	ld	a, 0x5236
                                    783 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 353: if (NewState != DISABLE)
      000428 0D 03            [ 1]  784 	tnz	(0x03, sp)
      00042A 27 06            [ 1]  785 	jreq	00102$
                                    786 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 356: UART1->CR3 |= UART1_CR3_LINEN;
      00042C AA 40            [ 1]  787 	or	a, #0x40
      00042E C7 52 36         [ 1]  788 	ld	0x5236, a
      000431 81               [ 4]  789 	ret
      000432                        790 00102$:
                                    791 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 361: UART1->CR3 &= ((uint8_t)~UART1_CR3_LINEN);
      000432 A4 BF            [ 1]  792 	and	a, #0xbf
      000434 C7 52 36         [ 1]  793 	ld	0x5236, a
                                    794 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 363: }
      000437 81               [ 4]  795 	ret
                                    796 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 371: void UART1_SmartCardCmd(FunctionalState NewState)
                                    797 ;	-----------------------------------------
                                    798 ;	 function UART1_SmartCardCmd
                                    799 ;	-----------------------------------------
      000438                        800 _UART1_SmartCardCmd:
                                    801 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 373: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000438 0D 03            [ 1]  802 	tnz	(0x03, sp)
      00043A 27 14            [ 1]  803 	jreq	00107$
      00043C 7B 03            [ 1]  804 	ld	a, (0x03, sp)
      00043E 4A               [ 1]  805 	dec	a
      00043F 27 0F            [ 1]  806 	jreq	00107$
      000441 4B 75            [ 1]  807 	push	#0x75
      000443 4B 01            [ 1]  808 	push	#0x01
      000445 5F               [ 1]  809 	clrw	x
      000446 89               [ 2]  810 	pushw	x
      000447 4Br00            [ 1]  811 	push	#<(___str_0+0)
      000449 4Bs00            [ 1]  812 	push	#((___str_0+0) >> 8)
      00044B CDr00r00         [ 4]  813 	call	_assert_failed
      00044E 5B 06            [ 2]  814 	addw	sp, #6
      000450                        815 00107$:
                                    816 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 378: UART1->CR5 |= UART1_CR5_SCEN;
      000450 C6 52 38         [ 1]  817 	ld	a, 0x5238
                                    818 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 375: if (NewState != DISABLE)
      000453 0D 03            [ 1]  819 	tnz	(0x03, sp)
      000455 27 06            [ 1]  820 	jreq	00102$
                                    821 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 378: UART1->CR5 |= UART1_CR5_SCEN;
      000457 AA 20            [ 1]  822 	or	a, #0x20
      000459 C7 52 38         [ 1]  823 	ld	0x5238, a
      00045C 81               [ 4]  824 	ret
      00045D                        825 00102$:
                                    826 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 383: UART1->CR5 &= ((uint8_t)(~UART1_CR5_SCEN));
      00045D A4 DF            [ 1]  827 	and	a, #0xdf
      00045F C7 52 38         [ 1]  828 	ld	0x5238, a
                                    829 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 385: }
      000462 81               [ 4]  830 	ret
                                    831 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 394: void UART1_SmartCardNACKCmd(FunctionalState NewState)
                                    832 ;	-----------------------------------------
                                    833 ;	 function UART1_SmartCardNACKCmd
                                    834 ;	-----------------------------------------
      000463                        835 _UART1_SmartCardNACKCmd:
                                    836 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 396: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000463 0D 03            [ 1]  837 	tnz	(0x03, sp)
      000465 27 14            [ 1]  838 	jreq	00107$
      000467 7B 03            [ 1]  839 	ld	a, (0x03, sp)
      000469 4A               [ 1]  840 	dec	a
      00046A 27 0F            [ 1]  841 	jreq	00107$
      00046C 4B 8C            [ 1]  842 	push	#0x8c
      00046E 4B 01            [ 1]  843 	push	#0x01
      000470 5F               [ 1]  844 	clrw	x
      000471 89               [ 2]  845 	pushw	x
      000472 4Br00            [ 1]  846 	push	#<(___str_0+0)
      000474 4Bs00            [ 1]  847 	push	#((___str_0+0) >> 8)
      000476 CDr00r00         [ 4]  848 	call	_assert_failed
      000479 5B 06            [ 2]  849 	addw	sp, #6
      00047B                        850 00107$:
                                    851 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 401: UART1->CR5 |= UART1_CR5_NACK;
      00047B C6 52 38         [ 1]  852 	ld	a, 0x5238
                                    853 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 398: if (NewState != DISABLE)
      00047E 0D 03            [ 1]  854 	tnz	(0x03, sp)
      000480 27 06            [ 1]  855 	jreq	00102$
                                    856 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 401: UART1->CR5 |= UART1_CR5_NACK;
      000482 AA 10            [ 1]  857 	or	a, #0x10
      000484 C7 52 38         [ 1]  858 	ld	0x5238, a
      000487 81               [ 4]  859 	ret
      000488                        860 00102$:
                                    861 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 406: UART1->CR5 &= ((uint8_t)~(UART1_CR5_NACK));
      000488 A4 EF            [ 1]  862 	and	a, #0xef
      00048A C7 52 38         [ 1]  863 	ld	0x5238, a
                                    864 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 408: }
      00048D 81               [ 4]  865 	ret
                                    866 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 416: void UART1_WakeUpConfig(UART1_WakeUp_TypeDef UART1_WakeUp)
                                    867 ;	-----------------------------------------
                                    868 ;	 function UART1_WakeUpConfig
                                    869 ;	-----------------------------------------
      00048E                        870 _UART1_WakeUpConfig:
                                    871 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 418: assert_param(IS_UART1_WAKEUP_OK(UART1_WakeUp));
      00048E 0D 03            [ 1]  872 	tnz	(0x03, sp)
      000490 27 15            [ 1]  873 	jreq	00104$
      000492 7B 03            [ 1]  874 	ld	a, (0x03, sp)
      000494 A1 08            [ 1]  875 	cp	a, #0x08
      000496 27 0F            [ 1]  876 	jreq	00104$
      000498 4B A2            [ 1]  877 	push	#0xa2
      00049A 4B 01            [ 1]  878 	push	#0x01
      00049C 5F               [ 1]  879 	clrw	x
      00049D 89               [ 2]  880 	pushw	x
      00049E 4Br00            [ 1]  881 	push	#<(___str_0+0)
      0004A0 4Bs00            [ 1]  882 	push	#((___str_0+0) >> 8)
      0004A2 CDr00r00         [ 4]  883 	call	_assert_failed
      0004A5 5B 06            [ 2]  884 	addw	sp, #6
      0004A7                        885 00104$:
                                    886 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 420: UART1->CR1 &= ((uint8_t)~UART1_CR1_WAKE);
      0004A7 72 17 52 34      [ 1]  887 	bres	21044, #3
                                    888 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 421: UART1->CR1 |= (uint8_t)UART1_WakeUp;
      0004AB C6 52 34         [ 1]  889 	ld	a, 0x5234
      0004AE 1A 03            [ 1]  890 	or	a, (0x03, sp)
      0004B0 C7 52 34         [ 1]  891 	ld	0x5234, a
                                    892 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 422: }
      0004B3 81               [ 4]  893 	ret
                                    894 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 430: void UART1_ReceiverWakeUpCmd(FunctionalState NewState)
                                    895 ;	-----------------------------------------
                                    896 ;	 function UART1_ReceiverWakeUpCmd
                                    897 ;	-----------------------------------------
      0004B4                        898 _UART1_ReceiverWakeUpCmd:
                                    899 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 432: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0004B4 0D 03            [ 1]  900 	tnz	(0x03, sp)
      0004B6 27 14            [ 1]  901 	jreq	00107$
      0004B8 7B 03            [ 1]  902 	ld	a, (0x03, sp)
      0004BA 4A               [ 1]  903 	dec	a
      0004BB 27 0F            [ 1]  904 	jreq	00107$
      0004BD 4B B0            [ 1]  905 	push	#0xb0
      0004BF 4B 01            [ 1]  906 	push	#0x01
      0004C1 5F               [ 1]  907 	clrw	x
      0004C2 89               [ 2]  908 	pushw	x
      0004C3 4Br00            [ 1]  909 	push	#<(___str_0+0)
      0004C5 4Bs00            [ 1]  910 	push	#((___str_0+0) >> 8)
      0004C7 CDr00r00         [ 4]  911 	call	_assert_failed
      0004CA 5B 06            [ 2]  912 	addw	sp, #6
      0004CC                        913 00107$:
                                    914 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 437: UART1->CR2 |= UART1_CR2_RWU;
      0004CC C6 52 35         [ 1]  915 	ld	a, 0x5235
                                    916 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 434: if (NewState != DISABLE)
      0004CF 0D 03            [ 1]  917 	tnz	(0x03, sp)
      0004D1 27 06            [ 1]  918 	jreq	00102$
                                    919 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 437: UART1->CR2 |= UART1_CR2_RWU;
      0004D3 AA 02            [ 1]  920 	or	a, #0x02
      0004D5 C7 52 35         [ 1]  921 	ld	0x5235, a
      0004D8 81               [ 4]  922 	ret
      0004D9                        923 00102$:
                                    924 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 442: UART1->CR2 &= ((uint8_t)~UART1_CR2_RWU);
      0004D9 A4 FD            [ 1]  925 	and	a, #0xfd
      0004DB C7 52 35         [ 1]  926 	ld	0x5235, a
                                    927 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 444: }
      0004DE 81               [ 4]  928 	ret
                                    929 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 451: uint8_t UART1_ReceiveData8(void)
                                    930 ;	-----------------------------------------
                                    931 ;	 function UART1_ReceiveData8
                                    932 ;	-----------------------------------------
      0004DF                        933 _UART1_ReceiveData8:
                                    934 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 453: return ((uint8_t)UART1->DR);
      0004DF C6 52 31         [ 1]  935 	ld	a, 0x5231
                                    936 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 454: }
      0004E2 81               [ 4]  937 	ret
                                    938 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 461: uint16_t UART1_ReceiveData9(void)
                                    939 ;	-----------------------------------------
                                    940 ;	 function UART1_ReceiveData9
                                    941 ;	-----------------------------------------
      0004E3                        942 _UART1_ReceiveData9:
      0004E3 89               [ 2]  943 	pushw	x
                                    944 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 465: temp = (uint16_t)(((uint16_t)( (uint16_t)UART1->CR1 & (uint16_t)UART1_CR1_R8)) << 1);
      0004E4 C6 52 34         [ 1]  945 	ld	a, 0x5234
      0004E7 A4 80            [ 1]  946 	and	a, #0x80
      0004E9 97               [ 1]  947 	ld	xl, a
      0004EA 4F               [ 1]  948 	clr	a
      0004EB 95               [ 1]  949 	ld	xh, a
      0004EC 58               [ 2]  950 	sllw	x
      0004ED 1F 01            [ 2]  951 	ldw	(0x01, sp), x
                                    952 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 466: return (uint16_t)( (((uint16_t) UART1->DR) | temp ) & ((uint16_t)0x01FF));
      0004EF C6 52 31         [ 1]  953 	ld	a, 0x5231
      0004F2 5F               [ 1]  954 	clrw	x
      0004F3 1A 02            [ 1]  955 	or	a, (0x02, sp)
      0004F5 02               [ 1]  956 	rlwa	x
      0004F6 1A 01            [ 1]  957 	or	a, (0x01, sp)
      0004F8 A4 01            [ 1]  958 	and	a, #0x01
      0004FA 95               [ 1]  959 	ld	xh, a
                                    960 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 467: }
      0004FB 5B 02            [ 2]  961 	addw	sp, #2
      0004FD 81               [ 4]  962 	ret
                                    963 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 474: void UART1_SendData8(uint8_t Data)
                                    964 ;	-----------------------------------------
                                    965 ;	 function UART1_SendData8
                                    966 ;	-----------------------------------------
      0004FE                        967 _UART1_SendData8:
                                    968 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 477: UART1->DR = Data;
      0004FE AE 52 31         [ 2]  969 	ldw	x, #0x5231
      000501 7B 03            [ 1]  970 	ld	a, (0x03, sp)
      000503 F7               [ 1]  971 	ld	(x), a
                                    972 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 478: }
      000504 81               [ 4]  973 	ret
                                    974 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 486: void UART1_SendData9(uint16_t Data)
                                    975 ;	-----------------------------------------
                                    976 ;	 function UART1_SendData9
                                    977 ;	-----------------------------------------
      000505                        978 _UART1_SendData9:
      000505 88               [ 1]  979 	push	a
                                    980 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 489: UART1->CR1 &= ((uint8_t)~UART1_CR1_T8);
      000506 72 1D 52 34      [ 1]  981 	bres	21044, #6
                                    982 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 491: UART1->CR1 |= (uint8_t)(((uint8_t)(Data >> 2)) & UART1_CR1_T8);
      00050A C6 52 34         [ 1]  983 	ld	a, 0x5234
      00050D 6B 01            [ 1]  984 	ld	(0x01, sp), a
      00050F 1E 04            [ 2]  985 	ldw	x, (0x04, sp)
      000511 54               [ 2]  986 	srlw	x
      000512 54               [ 2]  987 	srlw	x
      000513 9F               [ 1]  988 	ld	a, xl
      000514 A4 40            [ 1]  989 	and	a, #0x40
      000516 1A 01            [ 1]  990 	or	a, (0x01, sp)
      000518 C7 52 34         [ 1]  991 	ld	0x5234, a
                                    992 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 493: UART1->DR   = (uint8_t)(Data);
      00051B 7B 05            [ 1]  993 	ld	a, (0x05, sp)
      00051D C7 52 31         [ 1]  994 	ld	0x5231, a
                                    995 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 494: }
      000520 84               [ 1]  996 	pop	a
      000521 81               [ 4]  997 	ret
                                    998 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 501: void UART1_SendBreak(void)
                                    999 ;	-----------------------------------------
                                   1000 ;	 function UART1_SendBreak
                                   1001 ;	-----------------------------------------
      000522                       1002 _UART1_SendBreak:
                                   1003 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 503: UART1->CR2 |= UART1_CR2_SBK;
      000522 72 10 52 35      [ 1] 1004 	bset	21045, #0
                                   1005 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 504: }
      000526 81               [ 4] 1006 	ret
                                   1007 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 511: void UART1_SetAddress(uint8_t UART1_Address)
                                   1008 ;	-----------------------------------------
                                   1009 ;	 function UART1_SetAddress
                                   1010 ;	-----------------------------------------
      000527                       1011 _UART1_SetAddress:
                                   1012 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 514: assert_param(IS_UART1_ADDRESS_OK(UART1_Address));
      000527 7B 03            [ 1] 1013 	ld	a, (0x03, sp)
      000529 A1 10            [ 1] 1014 	cp	a, #0x10
      00052B 25 0F            [ 1] 1015 	jrc	00104$
      00052D 4B 02            [ 1] 1016 	push	#0x02
      00052F 4B 02            [ 1] 1017 	push	#0x02
      000531 5F               [ 1] 1018 	clrw	x
      000532 89               [ 2] 1019 	pushw	x
      000533 4Br00            [ 1] 1020 	push	#<(___str_0+0)
      000535 4Bs00            [ 1] 1021 	push	#((___str_0+0) >> 8)
      000537 CDr00r00         [ 4] 1022 	call	_assert_failed
      00053A 5B 06            [ 2] 1023 	addw	sp, #6
      00053C                       1024 00104$:
                                   1025 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 517: UART1->CR4 &= ((uint8_t)~UART1_CR4_ADD);
      00053C C6 52 37         [ 1] 1026 	ld	a, 0x5237
      00053F A4 F0            [ 1] 1027 	and	a, #0xf0
      000541 C7 52 37         [ 1] 1028 	ld	0x5237, a
                                   1029 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 519: UART1->CR4 |= UART1_Address;
      000544 C6 52 37         [ 1] 1030 	ld	a, 0x5237
      000547 1A 03            [ 1] 1031 	or	a, (0x03, sp)
      000549 C7 52 37         [ 1] 1032 	ld	0x5237, a
                                   1033 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 520: }
      00054C 81               [ 4] 1034 	ret
                                   1035 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 528: void UART1_SetGuardTime(uint8_t UART1_GuardTime)
                                   1036 ;	-----------------------------------------
                                   1037 ;	 function UART1_SetGuardTime
                                   1038 ;	-----------------------------------------
      00054D                       1039 _UART1_SetGuardTime:
                                   1040 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 531: UART1->GTR = UART1_GuardTime;
      00054D AE 52 39         [ 2] 1041 	ldw	x, #0x5239
      000550 7B 03            [ 1] 1042 	ld	a, (0x03, sp)
      000552 F7               [ 1] 1043 	ld	(x), a
                                   1044 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 532: }
      000553 81               [ 4] 1045 	ret
                                   1046 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 556: void UART1_SetPrescaler(uint8_t UART1_Prescaler)
                                   1047 ;	-----------------------------------------
                                   1048 ;	 function UART1_SetPrescaler
                                   1049 ;	-----------------------------------------
      000554                       1050 _UART1_SetPrescaler:
                                   1051 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 559: UART1->PSCR = UART1_Prescaler;
      000554 AE 52 3A         [ 2] 1052 	ldw	x, #0x523a
      000557 7B 03            [ 1] 1053 	ld	a, (0x03, sp)
      000559 F7               [ 1] 1054 	ld	(x), a
                                   1055 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 560: }
      00055A 81               [ 4] 1056 	ret
                                   1057 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 568: FlagStatus UART1_GetFlagStatus(UART1_Flag_TypeDef UART1_FLAG)
                                   1058 ;	-----------------------------------------
                                   1059 ;	 function UART1_GetFlagStatus
                                   1060 ;	-----------------------------------------
      00055B                       1061 _UART1_GetFlagStatus:
      00055B 89               [ 2] 1062 	pushw	x
                                   1063 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 573: assert_param(IS_UART1_FLAG_OK(UART1_FLAG));
      00055C 1E 05            [ 2] 1064 	ldw	x, (0x05, sp)
      00055E A3 01 01         [ 2] 1065 	cpw	x, #0x0101
      000561 26 05            [ 1] 1066 	jrne	00223$
      000563 A6 01            [ 1] 1067 	ld	a, #0x01
      000565 6B 01            [ 1] 1068 	ld	(0x01, sp), a
      000567 C5                    1069 	.byte 0xc5
      000568                       1070 00223$:
      000568 0F 01            [ 1] 1071 	clr	(0x01, sp)
      00056A                       1072 00224$:
      00056A A3 02 10         [ 2] 1073 	cpw	x, #0x0210
      00056D 26 03            [ 1] 1074 	jrne	00226$
      00056F A6 01            [ 1] 1075 	ld	a, #0x01
      000571 21                    1076 	.byte 0x21
      000572                       1077 00226$:
      000572 4F               [ 1] 1078 	clr	a
      000573                       1079 00227$:
      000573 A3 00 80         [ 2] 1080 	cpw	x, #0x0080
      000576 27 39            [ 1] 1081 	jreq	00119$
      000578 A3 00 40         [ 2] 1082 	cpw	x, #0x0040
      00057B 27 34            [ 1] 1083 	jreq	00119$
      00057D A3 00 20         [ 2] 1084 	cpw	x, #0x0020
      000580 27 2F            [ 1] 1085 	jreq	00119$
      000582 A3 00 10         [ 2] 1086 	cpw	x, #0x0010
      000585 27 2A            [ 1] 1087 	jreq	00119$
      000587 A3 00 08         [ 2] 1088 	cpw	x, #0x0008
      00058A 27 25            [ 1] 1089 	jreq	00119$
      00058C A3 00 04         [ 2] 1090 	cpw	x, #0x0004
      00058F 27 20            [ 1] 1091 	jreq	00119$
      000591 A3 00 02         [ 2] 1092 	cpw	x, #0x0002
      000594 27 1B            [ 1] 1093 	jreq	00119$
      000596 5A               [ 2] 1094 	decw	x
      000597 27 18            [ 1] 1095 	jreq	00119$
      000599 0D 01            [ 1] 1096 	tnz	(0x01, sp)
      00059B 26 14            [ 1] 1097 	jrne	00119$
      00059D 4D               [ 1] 1098 	tnz	a
      00059E 26 11            [ 1] 1099 	jrne	00119$
      0005A0 88               [ 1] 1100 	push	a
      0005A1 4B 3D            [ 1] 1101 	push	#0x3d
      0005A3 4B 02            [ 1] 1102 	push	#0x02
      0005A5 5F               [ 1] 1103 	clrw	x
      0005A6 89               [ 2] 1104 	pushw	x
      0005A7 4Br00            [ 1] 1105 	push	#<(___str_0+0)
      0005A9 4Bs00            [ 1] 1106 	push	#((___str_0+0) >> 8)
      0005AB CDr00r00         [ 4] 1107 	call	_assert_failed
      0005AE 5B 06            [ 2] 1108 	addw	sp, #6
      0005B0 84               [ 1] 1109 	pop	a
      0005B1                       1110 00119$:
                                   1111 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 579: if ((UART1->CR4 & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      0005B1 88               [ 1] 1112 	push	a
      0005B2 7B 07            [ 1] 1113 	ld	a, (0x07, sp)
      0005B4 6B 03            [ 1] 1114 	ld	(0x03, sp), a
      0005B6 84               [ 1] 1115 	pop	a
                                   1116 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 577: if (UART1_FLAG == UART1_FLAG_LBDF)
      0005B7 4D               [ 1] 1117 	tnz	a
      0005B8 27 0E            [ 1] 1118 	jreq	00114$
                                   1119 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 579: if ((UART1->CR4 & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      0005BA C6 52 37         [ 1] 1120 	ld	a, 0x5237
      0005BD 14 02            [ 1] 1121 	and	a, (0x02, sp)
      0005BF 27 04            [ 1] 1122 	jreq	00102$
                                   1123 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 582: status = SET;
      0005C1 A6 01            [ 1] 1124 	ld	a, #0x01
      0005C3 20 20            [ 2] 1125 	jra	00115$
      0005C5                       1126 00102$:
                                   1127 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 587: status = RESET;
      0005C5 4F               [ 1] 1128 	clr	a
      0005C6 20 1D            [ 2] 1129 	jra	00115$
      0005C8                       1130 00114$:
                                   1131 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 590: else if (UART1_FLAG == UART1_FLAG_SBK)
      0005C8 7B 01            [ 1] 1132 	ld	a, (0x01, sp)
      0005CA 27 0E            [ 1] 1133 	jreq	00111$
                                   1134 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 592: if ((UART1->CR2 & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      0005CC C6 52 35         [ 1] 1135 	ld	a, 0x5235
      0005CF 14 02            [ 1] 1136 	and	a, (0x02, sp)
      0005D1 27 04            [ 1] 1137 	jreq	00105$
                                   1138 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 595: status = SET;
      0005D3 A6 01            [ 1] 1139 	ld	a, #0x01
      0005D5 20 0E            [ 2] 1140 	jra	00115$
      0005D7                       1141 00105$:
                                   1142 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 600: status = RESET;
      0005D7 4F               [ 1] 1143 	clr	a
      0005D8 20 0B            [ 2] 1144 	jra	00115$
      0005DA                       1145 00111$:
                                   1146 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 605: if ((UART1->SR & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      0005DA C6 52 30         [ 1] 1147 	ld	a, 0x5230
      0005DD 14 02            [ 1] 1148 	and	a, (0x02, sp)
      0005DF 27 03            [ 1] 1149 	jreq	00108$
                                   1150 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 608: status = SET;
      0005E1 A6 01            [ 1] 1151 	ld	a, #0x01
                                   1152 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 613: status = RESET;
      0005E3 21                    1153 	.byte 0x21
      0005E4                       1154 00108$:
      0005E4 4F               [ 1] 1155 	clr	a
      0005E5                       1156 00115$:
                                   1157 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 617: return status;
                                   1158 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 618: }
      0005E5 85               [ 2] 1159 	popw	x
      0005E6 81               [ 4] 1160 	ret
                                   1161 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 646: void UART1_ClearFlag(UART1_Flag_TypeDef UART1_FLAG)
                                   1162 ;	-----------------------------------------
                                   1163 ;	 function UART1_ClearFlag
                                   1164 ;	-----------------------------------------
      0005E7                       1165 _UART1_ClearFlag:
                                   1166 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 648: assert_param(IS_UART1_CLEAR_FLAG_OK(UART1_FLAG));
      0005E7 1E 03            [ 2] 1167 	ldw	x, (0x03, sp)
      0005E9 A3 00 20         [ 2] 1168 	cpw	x, #0x0020
      0005EC 26 03            [ 1] 1169 	jrne	00127$
      0005EE A6 01            [ 1] 1170 	ld	a, #0x01
      0005F0 21                    1171 	.byte 0x21
      0005F1                       1172 00127$:
      0005F1 4F               [ 1] 1173 	clr	a
      0005F2                       1174 00128$:
      0005F2 4D               [ 1] 1175 	tnz	a
      0005F3 26 16            [ 1] 1176 	jrne	00107$
      0005F5 A3 02 10         [ 2] 1177 	cpw	x, #0x0210
      0005F8 27 11            [ 1] 1178 	jreq	00107$
      0005FA 88               [ 1] 1179 	push	a
      0005FB 4B 88            [ 1] 1180 	push	#0x88
      0005FD 4B 02            [ 1] 1181 	push	#0x02
      0005FF 5F               [ 1] 1182 	clrw	x
      000600 89               [ 2] 1183 	pushw	x
      000601 4Br00            [ 1] 1184 	push	#<(___str_0+0)
      000603 4Bs00            [ 1] 1185 	push	#((___str_0+0) >> 8)
      000605 CDr00r00         [ 4] 1186 	call	_assert_failed
      000608 5B 06            [ 2] 1187 	addw	sp, #6
      00060A 84               [ 1] 1188 	pop	a
      00060B                       1189 00107$:
                                   1190 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 651: if (UART1_FLAG == UART1_FLAG_RXNE)
      00060B 4D               [ 1] 1191 	tnz	a
      00060C 27 05            [ 1] 1192 	jreq	00102$
                                   1193 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 653: UART1->SR = (uint8_t)~(UART1_SR_RXNE);
      00060E 35 DF 52 30      [ 1] 1194 	mov	0x5230+0, #0xdf
      000612 81               [ 4] 1195 	ret
      000613                       1196 00102$:
                                   1197 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 658: UART1->CR4 &= (uint8_t)~(UART1_CR4_LBDF);
      000613 72 19 52 37      [ 1] 1198 	bres	21047, #4
                                   1199 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 660: }
      000617 81               [ 4] 1200 	ret
                                   1201 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 675: ITStatus UART1_GetITStatus(UART1_IT_TypeDef UART1_IT)
                                   1202 ;	-----------------------------------------
                                   1203 ;	 function UART1_GetITStatus
                                   1204 ;	-----------------------------------------
      000618                       1205 _UART1_GetITStatus:
      000618 52 04            [ 2] 1206 	sub	sp, #4
                                   1207 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 684: assert_param(IS_UART1_GET_IT_OK(UART1_IT));
      00061A 1E 07            [ 2] 1208 	ldw	x, (0x07, sp)
      00061C A3 03 46         [ 2] 1209 	cpw	x, #0x0346
      00061F 26 05            [ 1] 1210 	jrne	00217$
      000621 A6 01            [ 1] 1211 	ld	a, #0x01
      000623 6B 01            [ 1] 1212 	ld	(0x01, sp), a
      000625 C5                    1213 	.byte 0xc5
      000626                       1214 00217$:
      000626 0F 01            [ 1] 1215 	clr	(0x01, sp)
      000628                       1216 00218$:
      000628 A3 01 00         [ 2] 1217 	cpw	x, #0x0100
      00062B 26 05            [ 1] 1218 	jrne	00220$
      00062D A6 01            [ 1] 1219 	ld	a, #0x01
      00062F 6B 02            [ 1] 1220 	ld	(0x02, sp), a
      000631 C5                    1221 	.byte 0xc5
      000632                       1222 00220$:
      000632 0F 02            [ 1] 1223 	clr	(0x02, sp)
      000634                       1224 00221$:
      000634 A3 02 77         [ 2] 1225 	cpw	x, #0x0277
      000637 27 2B            [ 1] 1226 	jreq	00122$
      000639 A3 02 66         [ 2] 1227 	cpw	x, #0x0266
      00063C 27 26            [ 1] 1228 	jreq	00122$
      00063E A3 02 55         [ 2] 1229 	cpw	x, #0x0255
      000641 27 21            [ 1] 1230 	jreq	00122$
      000643 A3 02 44         [ 2] 1231 	cpw	x, #0x0244
      000646 27 1C            [ 1] 1232 	jreq	00122$
      000648 A3 02 35         [ 2] 1233 	cpw	x, #0x0235
      00064B 27 17            [ 1] 1234 	jreq	00122$
      00064D 0D 01            [ 1] 1235 	tnz	(0x01, sp)
      00064F 26 13            [ 1] 1236 	jrne	00122$
      000651 0D 02            [ 1] 1237 	tnz	(0x02, sp)
      000653 26 0F            [ 1] 1238 	jrne	00122$
      000655 4B AC            [ 1] 1239 	push	#0xac
      000657 4B 02            [ 1] 1240 	push	#0x02
      000659 5F               [ 1] 1241 	clrw	x
      00065A 89               [ 2] 1242 	pushw	x
      00065B 4Br00            [ 1] 1243 	push	#<(___str_0+0)
      00065D 4Bs00            [ 1] 1244 	push	#((___str_0+0) >> 8)
      00065F CDr00r00         [ 4] 1245 	call	_assert_failed
      000662 5B 06            [ 2] 1246 	addw	sp, #6
      000664                       1247 00122$:
                                   1248 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 687: itpos = (uint8_t)((uint8_t)1 << (uint8_t)((uint8_t)UART1_IT & (uint8_t)0x0F));
      000664 7B 08            [ 1] 1249 	ld	a, (0x08, sp)
      000666 97               [ 1] 1250 	ld	xl, a
      000667 A4 0F            [ 1] 1251 	and	a, #0x0f
      000669 88               [ 1] 1252 	push	a
      00066A A6 01            [ 1] 1253 	ld	a, #0x01
      00066C 6B 04            [ 1] 1254 	ld	(0x04, sp), a
      00066E 84               [ 1] 1255 	pop	a
      00066F 4D               [ 1] 1256 	tnz	a
      000670 27 05            [ 1] 1257 	jreq	00240$
      000672                       1258 00239$:
      000672 08 03            [ 1] 1259 	sll	(0x03, sp)
      000674 4A               [ 1] 1260 	dec	a
      000675 26 FB            [ 1] 1261 	jrne	00239$
      000677                       1262 00240$:
                                   1263 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 689: itmask1 = (uint8_t)((uint8_t)UART1_IT >> (uint8_t)4);
      000677 9F               [ 1] 1264 	ld	a, xl
      000678 4E               [ 1] 1265 	swap	a
      000679 A4 0F            [ 1] 1266 	and	a, #0x0f
                                   1267 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 691: itmask2 = (uint8_t)((uint8_t)1 << itmask1);
      00067B 88               [ 1] 1268 	push	a
      00067C A6 01            [ 1] 1269 	ld	a, #0x01
      00067E 6B 05            [ 1] 1270 	ld	(0x05, sp), a
      000680 84               [ 1] 1271 	pop	a
      000681 4D               [ 1] 1272 	tnz	a
      000682 27 05            [ 1] 1273 	jreq	00242$
      000684                       1274 00241$:
      000684 08 04            [ 1] 1275 	sll	(0x04, sp)
      000686 4A               [ 1] 1276 	dec	a
      000687 26 FB            [ 1] 1277 	jrne	00241$
      000689                       1278 00242$:
                                   1279 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 695: if (UART1_IT == UART1_IT_PE)
      000689 7B 02            [ 1] 1280 	ld	a, (0x02, sp)
      00068B 27 18            [ 1] 1281 	jreq	00117$
                                   1282 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 698: enablestatus = (uint8_t)((uint8_t)UART1->CR1 & itmask2);
      00068D C6 52 34         [ 1] 1283 	ld	a, 0x5234
      000690 14 04            [ 1] 1284 	and	a, (0x04, sp)
      000692 97               [ 1] 1285 	ld	xl, a
                                   1286 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 701: if (((UART1->SR & itpos) != (uint8_t)0x00) && enablestatus)
      000693 C6 52 30         [ 1] 1287 	ld	a, 0x5230
      000696 14 03            [ 1] 1288 	and	a, (0x03, sp)
      000698 27 08            [ 1] 1289 	jreq	00102$
      00069A 9F               [ 1] 1290 	ld	a, xl
      00069B 4D               [ 1] 1291 	tnz	a
      00069C 27 04            [ 1] 1292 	jreq	00102$
                                   1293 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 704: pendingbitstatus = SET;
      00069E A6 01            [ 1] 1294 	ld	a, #0x01
      0006A0 20 34            [ 2] 1295 	jra	00118$
      0006A2                       1296 00102$:
                                   1297 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 709: pendingbitstatus = RESET;
      0006A2 4F               [ 1] 1298 	clr	a
      0006A3 20 31            [ 2] 1299 	jra	00118$
      0006A5                       1300 00117$:
                                   1301 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 713: else if (UART1_IT == UART1_IT_LBDF)
      0006A5 7B 01            [ 1] 1302 	ld	a, (0x01, sp)
      0006A7 27 18            [ 1] 1303 	jreq	00114$
                                   1304 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 716: enablestatus = (uint8_t)((uint8_t)UART1->CR4 & itmask2);
      0006A9 C6 52 37         [ 1] 1305 	ld	a, 0x5237
      0006AC 14 04            [ 1] 1306 	and	a, (0x04, sp)
      0006AE 97               [ 1] 1307 	ld	xl, a
                                   1308 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 718: if (((UART1->CR4 & itpos) != (uint8_t)0x00) && enablestatus)
      0006AF C6 52 37         [ 1] 1309 	ld	a, 0x5237
      0006B2 14 03            [ 1] 1310 	and	a, (0x03, sp)
      0006B4 27 08            [ 1] 1311 	jreq	00106$
      0006B6 9F               [ 1] 1312 	ld	a, xl
      0006B7 4D               [ 1] 1313 	tnz	a
      0006B8 27 04            [ 1] 1314 	jreq	00106$
                                   1315 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 721: pendingbitstatus = SET;
      0006BA A6 01            [ 1] 1316 	ld	a, #0x01
      0006BC 20 18            [ 2] 1317 	jra	00118$
      0006BE                       1318 00106$:
                                   1319 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 726: pendingbitstatus = RESET;
      0006BE 4F               [ 1] 1320 	clr	a
      0006BF 20 15            [ 2] 1321 	jra	00118$
      0006C1                       1322 00114$:
                                   1323 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 732: enablestatus = (uint8_t)((uint8_t)UART1->CR2 & itmask2);
      0006C1 C6 52 35         [ 1] 1324 	ld	a, 0x5235
      0006C4 14 04            [ 1] 1325 	and	a, (0x04, sp)
      0006C6 97               [ 1] 1326 	ld	xl, a
                                   1327 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 734: if (((UART1->SR & itpos) != (uint8_t)0x00) && enablestatus)
      0006C7 C6 52 30         [ 1] 1328 	ld	a, 0x5230
      0006CA 14 03            [ 1] 1329 	and	a, (0x03, sp)
      0006CC 27 07            [ 1] 1330 	jreq	00110$
      0006CE 9F               [ 1] 1331 	ld	a, xl
      0006CF 4D               [ 1] 1332 	tnz	a
      0006D0 27 03            [ 1] 1333 	jreq	00110$
                                   1334 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 737: pendingbitstatus = SET;
      0006D2 A6 01            [ 1] 1335 	ld	a, #0x01
                                   1336 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 742: pendingbitstatus = RESET;
      0006D4 21                    1337 	.byte 0x21
      0006D5                       1338 00110$:
      0006D5 4F               [ 1] 1339 	clr	a
      0006D6                       1340 00118$:
                                   1341 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 747: return  pendingbitstatus;
                                   1342 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 748: }
      0006D6 5B 04            [ 2] 1343 	addw	sp, #4
      0006D8 81               [ 4] 1344 	ret
                                   1345 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 775: void UART1_ClearITPendingBit(UART1_IT_TypeDef UART1_IT)
                                   1346 ;	-----------------------------------------
                                   1347 ;	 function UART1_ClearITPendingBit
                                   1348 ;	-----------------------------------------
      0006D9                       1349 _UART1_ClearITPendingBit:
                                   1350 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 777: assert_param(IS_UART1_CLEAR_IT_OK(UART1_IT));
      0006D9 1E 03            [ 2] 1351 	ldw	x, (0x03, sp)
      0006DB A3 02 55         [ 2] 1352 	cpw	x, #0x0255
      0006DE 26 03            [ 1] 1353 	jrne	00127$
      0006E0 A6 01            [ 1] 1354 	ld	a, #0x01
      0006E2 21                    1355 	.byte 0x21
      0006E3                       1356 00127$:
      0006E3 4F               [ 1] 1357 	clr	a
      0006E4                       1358 00128$:
      0006E4 4D               [ 1] 1359 	tnz	a
      0006E5 26 16            [ 1] 1360 	jrne	00107$
      0006E7 A3 03 46         [ 2] 1361 	cpw	x, #0x0346
      0006EA 27 11            [ 1] 1362 	jreq	00107$
      0006EC 88               [ 1] 1363 	push	a
      0006ED 4B 09            [ 1] 1364 	push	#0x09
      0006EF 4B 03            [ 1] 1365 	push	#0x03
      0006F1 5F               [ 1] 1366 	clrw	x
      0006F2 89               [ 2] 1367 	pushw	x
      0006F3 4Br00            [ 1] 1368 	push	#<(___str_0+0)
      0006F5 4Bs00            [ 1] 1369 	push	#((___str_0+0) >> 8)
      0006F7 CDr00r00         [ 4] 1370 	call	_assert_failed
      0006FA 5B 06            [ 2] 1371 	addw	sp, #6
      0006FC 84               [ 1] 1372 	pop	a
      0006FD                       1373 00107$:
                                   1374 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 780: if (UART1_IT == UART1_IT_RXNE)
      0006FD 4D               [ 1] 1375 	tnz	a
      0006FE 27 05            [ 1] 1376 	jreq	00102$
                                   1377 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 782: UART1->SR = (uint8_t)~(UART1_SR_RXNE);
      000700 35 DF 52 30      [ 1] 1378 	mov	0x5230+0, #0xdf
      000704 81               [ 4] 1379 	ret
      000705                       1380 00102$:
                                   1381 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 787: UART1->CR4 &= (uint8_t)~(UART1_CR4_LBDF);
      000705 72 19 52 37      [ 1] 1382 	bres	21047, #4
                                   1383 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_uart1.c: 789: }
      000709 81               [ 4] 1384 	ret
                                   1385 	.area CODE
                                   1386 	.area CONST
                                   1387 	.area CONST
      000000                       1388 ___str_0:
      000000 43 3A                 1389 	.ascii "C:"
      000002 5C                    1390 	.db 0x5c
      000003 55 73 65 72 73        1391 	.ascii "Users"
      000008 5C                    1392 	.db 0x5c
      000009 41 64 6D 69 6E        1393 	.ascii "Admin"
      00000E 5C                    1394 	.db 0x5c
      00000F 2E 70 6C 61 74 66 6F  1395 	.ascii ".platformio"
             72 6D 69 6F
      00001A 5C                    1396 	.db 0x5c
      00001B 70 61 63 6B 61 67 65  1397 	.ascii "packages"
             73
      000023 5C                    1398 	.db 0x5c
      000024 66 72 61 6D 65 77 6F  1399 	.ascii "framework-ststm8spl"
             72 6B 2D 73 74 73 74
             6D 38 73 70 6C
      000037 5C                    1400 	.db 0x5c
      000038 4C 69 62 72 61 72 69  1401 	.ascii "Libraries"
             65 73
      000041 5C                    1402 	.db 0x5c
      000042 53 54 4D 38 53 5F 53  1403 	.ascii "STM8S_StdPeriph_Driver"
             74 64 50 65 72 69 70
             68 5F 44 72 69 76 65
             72
      000058 5C                    1404 	.db 0x5c
      000059 73 72 63              1405 	.ascii "src"
      00005C 5C                    1406 	.db 0x5c
      00005D 73 74 6D 38 73 5F 75  1407 	.ascii "stm8s_uart1.c"
             61 72 74 31 2E 63
      00006A 00                    1408 	.db 0x00
                                   1409 	.area CODE
                                   1410 	.area INITIALIZER
                                   1411 	.area CABS (ABS)
