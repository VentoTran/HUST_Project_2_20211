                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_wwdg
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _WWDG_Init
                                     13 	.globl _WWDG_SetCounter
                                     14 	.globl _WWDG_GetCounter
                                     15 	.globl _WWDG_SWReset
                                     16 	.globl _WWDG_SetWindowValue
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area DATA
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area INITIALIZED
                                     25 ;--------------------------------------------------------
                                     26 ; absolute external ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area DABS (ABS)
                                     29 
                                     30 ; default segment ordering for linker
                                     31 	.area HOME
                                     32 	.area GSINIT
                                     33 	.area GSFINAL
                                     34 	.area CONST
                                     35 	.area INITIALIZER
                                     36 	.area CODE
                                     37 
                                     38 ;--------------------------------------------------------
                                     39 ; global & static initialisations
                                     40 ;--------------------------------------------------------
                                     41 	.area HOME
                                     42 	.area GSINIT
                                     43 	.area GSFINAL
                                     44 	.area GSINIT
                                     45 ;--------------------------------------------------------
                                     46 ; Home
                                     47 ;--------------------------------------------------------
                                     48 	.area HOME
                                     49 	.area HOME
                                     50 ;--------------------------------------------------------
                                     51 ; code
                                     52 ;--------------------------------------------------------
                                     53 	.area CODE
                                     54 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 53: void WWDG_Init(uint8_t Counter, uint8_t WindowValue)
                                     55 ;	-----------------------------------------
                                     56 ;	 function WWDG_Init
                                     57 ;	-----------------------------------------
      000000                         58 _WWDG_Init:
                                     59 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 56: assert_param(IS_WWDG_WINDOWLIMITVALUE_OK(WindowValue));
      000000 7B 04            [ 1]   60 	ld	a, (0x04, sp)
      000002 A1 7F            [ 1]   61 	cp	a, #0x7f
      000004 23 0F            [ 2]   62 	jrule	00104$
      000006 4B 38            [ 1]   63 	push	#0x38
      000008 5F               [ 1]   64 	clrw	x
      000009 89               [ 2]   65 	pushw	x
      00000A 4B 00            [ 1]   66 	push	#0x00
      00000C 4Br00            [ 1]   67 	push	#<(___str_0+0)
      00000E 4Bs00            [ 1]   68 	push	#((___str_0+0) >> 8)
      000010 CDr00r00         [ 4]   69 	call	_assert_failed
      000013 5B 06            [ 2]   70 	addw	sp, #6
      000015                         71 00104$:
                                     72 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 58: WWDG->WR = WWDG_WR_RESET_VALUE;
      000015 35 7F 50 D2      [ 1]   73 	mov	0x50d2+0, #0x7f
                                     74 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 59: WWDG->CR = (uint8_t)((uint8_t)(WWDG_CR_WDGA | WWDG_CR_T6) | (uint8_t)Counter);
      000019 7B 03            [ 1]   75 	ld	a, (0x03, sp)
      00001B AA C0            [ 1]   76 	or	a, #0xc0
      00001D C7 50 D1         [ 1]   77 	ld	0x50d1, a
                                     78 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 60: WWDG->WR = (uint8_t)((uint8_t)(~WWDG_CR_WDGA) & (uint8_t)(WWDG_CR_T6 | WindowValue));
      000020 7B 04            [ 1]   79 	ld	a, (0x04, sp)
      000022 AA 40            [ 1]   80 	or	a, #0x40
      000024 A4 7F            [ 1]   81 	and	a, #0x7f
      000026 C7 50 D2         [ 1]   82 	ld	0x50d2, a
                                     83 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 61: }
      000029 81               [ 4]   84 	ret
                                     85 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 69: void WWDG_SetCounter(uint8_t Counter)
                                     86 ;	-----------------------------------------
                                     87 ;	 function WWDG_SetCounter
                                     88 ;	-----------------------------------------
      00002A                         89 _WWDG_SetCounter:
                                     90 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 72: assert_param(IS_WWDG_COUNTERVALUE_OK(Counter));
      00002A 7B 03            [ 1]   91 	ld	a, (0x03, sp)
      00002C A1 7F            [ 1]   92 	cp	a, #0x7f
      00002E 23 0F            [ 2]   93 	jrule	00104$
      000030 4B 48            [ 1]   94 	push	#0x48
      000032 5F               [ 1]   95 	clrw	x
      000033 89               [ 2]   96 	pushw	x
      000034 4B 00            [ 1]   97 	push	#0x00
      000036 4Br00            [ 1]   98 	push	#<(___str_0+0)
      000038 4Bs00            [ 1]   99 	push	#((___str_0+0) >> 8)
      00003A CDr00r00         [ 4]  100 	call	_assert_failed
      00003D 5B 06            [ 2]  101 	addw	sp, #6
      00003F                        102 00104$:
                                    103 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 76: WWDG->CR = (uint8_t)(Counter & (uint8_t)BIT_MASK);
      00003F 7B 03            [ 1]  104 	ld	a, (0x03, sp)
      000041 A4 7F            [ 1]  105 	and	a, #0x7f
      000043 C7 50 D1         [ 1]  106 	ld	0x50d1, a
                                    107 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 77: }
      000046 81               [ 4]  108 	ret
                                    109 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 86: uint8_t WWDG_GetCounter(void)
                                    110 ;	-----------------------------------------
                                    111 ;	 function WWDG_GetCounter
                                    112 ;	-----------------------------------------
      000047                        113 _WWDG_GetCounter:
                                    114 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 88: return(WWDG->CR);
      000047 C6 50 D1         [ 1]  115 	ld	a, 0x50d1
                                    116 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 89: }
      00004A 81               [ 4]  117 	ret
                                    118 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 96: void WWDG_SWReset(void)
                                    119 ;	-----------------------------------------
                                    120 ;	 function WWDG_SWReset
                                    121 ;	-----------------------------------------
      00004B                        122 _WWDG_SWReset:
                                    123 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 98: WWDG->CR = WWDG_CR_WDGA; /* Activate WWDG, with clearing T6 */
      00004B 35 80 50 D1      [ 1]  124 	mov	0x50d1+0, #0x80
                                    125 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 99: }
      00004F 81               [ 4]  126 	ret
                                    127 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 108: void WWDG_SetWindowValue(uint8_t WindowValue)
                                    128 ;	-----------------------------------------
                                    129 ;	 function WWDG_SetWindowValue
                                    130 ;	-----------------------------------------
      000050                        131 _WWDG_SetWindowValue:
                                    132 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 111: assert_param(IS_WWDG_WINDOWLIMITVALUE_OK(WindowValue));
      000050 7B 03            [ 1]  133 	ld	a, (0x03, sp)
      000052 A1 7F            [ 1]  134 	cp	a, #0x7f
      000054 23 0F            [ 2]  135 	jrule	00104$
      000056 4B 6F            [ 1]  136 	push	#0x6f
      000058 5F               [ 1]  137 	clrw	x
      000059 89               [ 2]  138 	pushw	x
      00005A 4B 00            [ 1]  139 	push	#0x00
      00005C 4Br00            [ 1]  140 	push	#<(___str_0+0)
      00005E 4Bs00            [ 1]  141 	push	#((___str_0+0) >> 8)
      000060 CDr00r00         [ 4]  142 	call	_assert_failed
      000063 5B 06            [ 2]  143 	addw	sp, #6
      000065                        144 00104$:
                                    145 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 113: WWDG->WR = (uint8_t)((uint8_t)(~WWDG_CR_WDGA) & (uint8_t)(WWDG_CR_T6 | WindowValue));
      000065 7B 03            [ 1]  146 	ld	a, (0x03, sp)
      000067 AA 40            [ 1]  147 	or	a, #0x40
      000069 A4 7F            [ 1]  148 	and	a, #0x7f
      00006B C7 50 D2         [ 1]  149 	ld	0x50d2, a
                                    150 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_wwdg.c: 114: }
      00006E 81               [ 4]  151 	ret
                                    152 	.area CODE
                                    153 	.area CONST
                                    154 	.area CONST
      000000                        155 ___str_0:
      000000 43 3A                  156 	.ascii "C:"
      000002 5C                     157 	.db 0x5c
      000003 55 73 65 72 73         158 	.ascii "Users"
      000008 5C                     159 	.db 0x5c
      000009 41 64 6D 69 6E         160 	.ascii "Admin"
      00000E 5C                     161 	.db 0x5c
      00000F 2E 70 6C 61 74 66 6F   162 	.ascii ".platformio"
             72 6D 69 6F
      00001A 5C                     163 	.db 0x5c
      00001B 70 61 63 6B 61 67 65   164 	.ascii "packages"
             73
      000023 5C                     165 	.db 0x5c
      000024 66 72 61 6D 65 77 6F   166 	.ascii "framework-ststm8spl"
             72 6B 2D 73 74 73 74
             6D 38 73 70 6C
      000037 5C                     167 	.db 0x5c
      000038 4C 69 62 72 61 72 69   168 	.ascii "Libraries"
             65 73
      000041 5C                     169 	.db 0x5c
      000042 53 54 4D 38 53 5F 53   170 	.ascii "STM8S_StdPeriph_Driver"
             74 64 50 65 72 69 70
             68 5F 44 72 69 76 65
             72
      000058 5C                     171 	.db 0x5c
      000059 73 72 63               172 	.ascii "src"
      00005C 5C                     173 	.db 0x5c
      00005D 73 74 6D 38 73 5F 77   174 	.ascii "stm8s_wwdg.c"
             77 64 67 2E 63
      000069 00                     175 	.db 0x00
                                    176 	.area CODE
                                    177 	.area INITIALIZER
                                    178 	.area CABS (ABS)
