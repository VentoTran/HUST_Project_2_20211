                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_awu
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TBR_Array
                                     12 	.globl _APR_Array
                                     13 	.globl _assert_failed
                                     14 	.globl _AWU_DeInit
                                     15 	.globl _AWU_Init
                                     16 	.globl _AWU_Cmd
                                     17 	.globl _AWU_LSICalibrationConfig
                                     18 	.globl _AWU_IdleModeEnable
                                     19 	.globl _AWU_GetFlagStatus
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DATA
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area INITIALIZED
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DABS (ABS)
                                     32 
                                     33 ; default segment ordering for linker
                                     34 	.area HOME
                                     35 	.area GSINIT
                                     36 	.area GSFINAL
                                     37 	.area CONST
                                     38 	.area INITIALIZER
                                     39 	.area CODE
                                     40 
                                     41 ;--------------------------------------------------------
                                     42 ; global & static initialisations
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area GSINIT
                                     46 	.area GSFINAL
                                     47 	.area GSINIT
                                     48 ;--------------------------------------------------------
                                     49 ; Home
                                     50 ;--------------------------------------------------------
                                     51 	.area HOME
                                     52 	.area HOME
                                     53 ;--------------------------------------------------------
                                     54 ; code
                                     55 ;--------------------------------------------------------
                                     56 	.area CODE
                                     57 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 73: void AWU_DeInit(void)
                                     58 ;	-----------------------------------------
                                     59 ;	 function AWU_DeInit
                                     60 ;	-----------------------------------------
      000000                         61 _AWU_DeInit:
                                     62 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 75: AWU->CSR = AWU_CSR_RESET_VALUE;
      000000 35 00 50 F0      [ 1]   63 	mov	0x50f0+0, #0x00
                                     64 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 76: AWU->APR = AWU_APR_RESET_VALUE;
      000004 35 3F 50 F1      [ 1]   65 	mov	0x50f1+0, #0x3f
                                     66 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 77: AWU->TBR = AWU_TBR_RESET_VALUE;
      000008 35 00 50 F2      [ 1]   67 	mov	0x50f2+0, #0x00
                                     68 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 78: }
      00000C 81               [ 4]   69 	ret
                                     70 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 88: void AWU_Init(AWU_Timebase_TypeDef AWU_TimeBase)
                                     71 ;	-----------------------------------------
                                     72 ;	 function AWU_Init
                                     73 ;	-----------------------------------------
      00000D                         74 _AWU_Init:
      00000D 88               [ 1]   75 	push	a
                                     76 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 91: assert_param(IS_AWU_TIMEBASE_OK(AWU_TimeBase));
      00000E 0D 04            [ 1]   77 	tnz	(0x04, sp)
      000010 27 6E            [ 1]   78 	jreq	00104$
      000012 7B 04            [ 1]   79 	ld	a, (0x04, sp)
      000014 4A               [ 1]   80 	dec	a
      000015 27 69            [ 1]   81 	jreq	00104$
      000017 7B 04            [ 1]   82 	ld	a, (0x04, sp)
      000019 A1 02            [ 1]   83 	cp	a, #0x02
      00001B 27 63            [ 1]   84 	jreq	00104$
      00001D 7B 04            [ 1]   85 	ld	a, (0x04, sp)
      00001F A1 03            [ 1]   86 	cp	a, #0x03
      000021 27 5D            [ 1]   87 	jreq	00104$
      000023 7B 04            [ 1]   88 	ld	a, (0x04, sp)
      000025 A1 04            [ 1]   89 	cp	a, #0x04
      000027 27 57            [ 1]   90 	jreq	00104$
      000029 7B 04            [ 1]   91 	ld	a, (0x04, sp)
      00002B A1 05            [ 1]   92 	cp	a, #0x05
      00002D 27 51            [ 1]   93 	jreq	00104$
      00002F 7B 04            [ 1]   94 	ld	a, (0x04, sp)
      000031 A1 06            [ 1]   95 	cp	a, #0x06
      000033 27 4B            [ 1]   96 	jreq	00104$
      000035 7B 04            [ 1]   97 	ld	a, (0x04, sp)
      000037 A1 07            [ 1]   98 	cp	a, #0x07
      000039 27 45            [ 1]   99 	jreq	00104$
      00003B 7B 04            [ 1]  100 	ld	a, (0x04, sp)
      00003D A1 08            [ 1]  101 	cp	a, #0x08
      00003F 27 3F            [ 1]  102 	jreq	00104$
      000041 7B 04            [ 1]  103 	ld	a, (0x04, sp)
      000043 A1 09            [ 1]  104 	cp	a, #0x09
      000045 27 39            [ 1]  105 	jreq	00104$
      000047 7B 04            [ 1]  106 	ld	a, (0x04, sp)
      000049 A1 0A            [ 1]  107 	cp	a, #0x0a
      00004B 27 33            [ 1]  108 	jreq	00104$
      00004D 7B 04            [ 1]  109 	ld	a, (0x04, sp)
      00004F A1 0B            [ 1]  110 	cp	a, #0x0b
      000051 27 2D            [ 1]  111 	jreq	00104$
      000053 7B 04            [ 1]  112 	ld	a, (0x04, sp)
      000055 A1 0C            [ 1]  113 	cp	a, #0x0c
      000057 27 27            [ 1]  114 	jreq	00104$
      000059 7B 04            [ 1]  115 	ld	a, (0x04, sp)
      00005B A1 0D            [ 1]  116 	cp	a, #0x0d
      00005D 27 21            [ 1]  117 	jreq	00104$
      00005F 7B 04            [ 1]  118 	ld	a, (0x04, sp)
      000061 A1 0E            [ 1]  119 	cp	a, #0x0e
      000063 27 1B            [ 1]  120 	jreq	00104$
      000065 7B 04            [ 1]  121 	ld	a, (0x04, sp)
      000067 A1 0F            [ 1]  122 	cp	a, #0x0f
      000069 27 15            [ 1]  123 	jreq	00104$
      00006B 7B 04            [ 1]  124 	ld	a, (0x04, sp)
      00006D A1 10            [ 1]  125 	cp	a, #0x10
      00006F 27 0F            [ 1]  126 	jreq	00104$
      000071 4B 5B            [ 1]  127 	push	#0x5b
      000073 5F               [ 1]  128 	clrw	x
      000074 89               [ 2]  129 	pushw	x
      000075 4B 00            [ 1]  130 	push	#0x00
      000077 4Br22            [ 1]  131 	push	#<(___str_0+0)
      000079 4Bs00            [ 1]  132 	push	#((___str_0+0) >> 8)
      00007B CDr00r00         [ 4]  133 	call	_assert_failed
      00007E 5B 06            [ 2]  134 	addw	sp, #6
      000080                        135 00104$:
                                    136 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 94: AWU->CSR |= AWU_CSR_AWUEN;
      000080 72 18 50 F0      [ 1]  137 	bset	20720, #4
                                    138 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 97: AWU->TBR &= (uint8_t)(~AWU_TBR_AWUTB);
      000084 C6 50 F2         [ 1]  139 	ld	a, 0x50f2
      000087 A4 F0            [ 1]  140 	and	a, #0xf0
      000089 C7 50 F2         [ 1]  141 	ld	0x50f2, a
                                    142 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 98: AWU->TBR |= TBR_Array[(uint8_t)AWU_TimeBase];
      00008C C6 50 F2         [ 1]  143 	ld	a, 0x50f2
      00008F 6B 01            [ 1]  144 	ld	(0x01, sp), a
      000091 5F               [ 1]  145 	clrw	x
      000092 7B 04            [ 1]  146 	ld	a, (0x04, sp)
      000094 97               [ 1]  147 	ld	xl, a
      000095 1Cr00r11         [ 2]  148 	addw	x, #(_TBR_Array+0)
      000098 F6               [ 1]  149 	ld	a, (x)
      000099 1A 01            [ 1]  150 	or	a, (0x01, sp)
      00009B C7 50 F2         [ 1]  151 	ld	0x50f2, a
                                    152 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 101: AWU->APR &= (uint8_t)(~AWU_APR_APR);
      00009E C6 50 F1         [ 1]  153 	ld	a, 0x50f1
      0000A1 A4 C0            [ 1]  154 	and	a, #0xc0
      0000A3 C7 50 F1         [ 1]  155 	ld	0x50f1, a
                                    156 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 102: AWU->APR |= APR_Array[(uint8_t)AWU_TimeBase];
      0000A6 C6 50 F1         [ 1]  157 	ld	a, 0x50f1
      0000A9 6B 01            [ 1]  158 	ld	(0x01, sp), a
      0000AB 5F               [ 1]  159 	clrw	x
      0000AC 7B 04            [ 1]  160 	ld	a, (0x04, sp)
      0000AE 97               [ 1]  161 	ld	xl, a
      0000AF D6u00u00         [ 1]  162 	ld	a, (_APR_Array+0, x)
      0000B2 1A 01            [ 1]  163 	or	a, (0x01, sp)
      0000B4 C7 50 F1         [ 1]  164 	ld	0x50f1, a
                                    165 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 103: }
      0000B7 84               [ 1]  166 	pop	a
      0000B8 81               [ 4]  167 	ret
                                    168 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 112: void AWU_Cmd(FunctionalState NewState)
                                    169 ;	-----------------------------------------
                                    170 ;	 function AWU_Cmd
                                    171 ;	-----------------------------------------
      0000B9                        172 _AWU_Cmd:
                                    173 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 117: AWU->CSR |= AWU_CSR_AWUEN;
      0000B9 C6 50 F0         [ 1]  174 	ld	a, 0x50f0
                                    175 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 114: if (NewState != DISABLE)
      0000BC 0D 03            [ 1]  176 	tnz	(0x03, sp)
      0000BE 27 06            [ 1]  177 	jreq	00102$
                                    178 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 117: AWU->CSR |= AWU_CSR_AWUEN;
      0000C0 AA 10            [ 1]  179 	or	a, #0x10
      0000C2 C7 50 F0         [ 1]  180 	ld	0x50f0, a
      0000C5 81               [ 4]  181 	ret
      0000C6                        182 00102$:
                                    183 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 122: AWU->CSR &= (uint8_t)(~AWU_CSR_AWUEN);
      0000C6 A4 EF            [ 1]  184 	and	a, #0xef
      0000C8 C7 50 F0         [ 1]  185 	ld	0x50f0, a
                                    186 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 124: }
      0000CB 81               [ 4]  187 	ret
                                    188 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 139: void AWU_LSICalibrationConfig(uint32_t LSIFreqHz)
                                    189 ;	-----------------------------------------
                                    190 ;	 function AWU_LSICalibrationConfig
                                    191 ;	-----------------------------------------
      0000CC                        192 _AWU_LSICalibrationConfig:
      0000CC 52 06            [ 2]  193 	sub	sp, #6
                                    194 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 145: assert_param(IS_LSI_FREQUENCY_OK(LSIFreqHz));
      0000CE 1E 0B            [ 2]  195 	ldw	x, (0x0b, sp)
      0000D0 A3 AD B0         [ 2]  196 	cpw	x, #0xadb0
      0000D3 7B 0A            [ 1]  197 	ld	a, (0x0a, sp)
      0000D5 A2 01            [ 1]  198 	sbc	a, #0x01
      0000D7 7B 09            [ 1]  199 	ld	a, (0x09, sp)
      0000D9 A2 00            [ 1]  200 	sbc	a, #0x00
      0000DB 25 0E            [ 1]  201 	jrc	00106$
      0000DD AE 49 F0         [ 2]  202 	ldw	x, #0x49f0
      0000E0 13 0B            [ 2]  203 	cpw	x, (0x0b, sp)
      0000E2 A6 02            [ 1]  204 	ld	a, #0x02
      0000E4 12 0A            [ 1]  205 	sbc	a, (0x0a, sp)
      0000E6 4F               [ 1]  206 	clr	a
      0000E7 12 09            [ 1]  207 	sbc	a, (0x09, sp)
      0000E9 24 0F            [ 1]  208 	jrnc	00107$
      0000EB                        209 00106$:
      0000EB 4B 91            [ 1]  210 	push	#0x91
      0000ED 5F               [ 1]  211 	clrw	x
      0000EE 89               [ 2]  212 	pushw	x
      0000EF 4B 00            [ 1]  213 	push	#0x00
      0000F1 4Br22            [ 1]  214 	push	#<(___str_0+0)
      0000F3 4Bs00            [ 1]  215 	push	#((___str_0+0) >> 8)
      0000F5 CDr00r00         [ 4]  216 	call	_assert_failed
      0000F8 5B 06            [ 2]  217 	addw	sp, #6
      0000FA                        218 00107$:
                                    219 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 147: lsifreqkhz = (uint16_t)(LSIFreqHz / 1000); /* Converts value in kHz */
      0000FA 4B E8            [ 1]  220 	push	#0xe8
      0000FC 4B 03            [ 1]  221 	push	#0x03
      0000FE 5F               [ 1]  222 	clrw	x
      0000FF 89               [ 2]  223 	pushw	x
      000100 1E 0F            [ 2]  224 	ldw	x, (0x0f, sp)
      000102 89               [ 2]  225 	pushw	x
      000103 1E 0F            [ 2]  226 	ldw	x, (0x0f, sp)
      000105 89               [ 2]  227 	pushw	x
      000106 CDr00r00         [ 4]  228 	call	__divulong
      000109 5B 08            [ 2]  229 	addw	sp, #8
                                    230 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 151: A = (uint16_t)(lsifreqkhz >> 2U); /* Division by 4, keep integer part only */
      00010B 90 93            [ 1]  231 	ldw	y, x
      00010D 54               [ 2]  232 	srlw	x
      00010E 54               [ 2]  233 	srlw	x
                                    234 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 153: if ((4U * A) >= ((lsifreqkhz - (4U * A)) * (1U + (2U * A))))
      00010F 1F 01            [ 2]  235 	ldw	(0x01, sp), x
      000111 1F 03            [ 2]  236 	ldw	(0x03, sp), x
      000113 08 04            [ 1]  237 	sll	(0x04, sp)
      000115 09 03            [ 1]  238 	rlc	(0x03, sp)
      000117 08 04            [ 1]  239 	sll	(0x04, sp)
      000119 09 03            [ 1]  240 	rlc	(0x03, sp)
      00011B 72 F2 03         [ 2]  241 	subw	y, (0x03, sp)
      00011E 58               [ 2]  242 	sllw	x
      00011F 5C               [ 1]  243 	incw	x
      000120 89               [ 2]  244 	pushw	x
      000121 90 89            [ 2]  245 	pushw	y
                                    246 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 155: AWU->APR = (uint8_t)(A - 2U);
      000123 CDr00r00         [ 4]  247 	call	__mulint
      000126 5B 04            [ 2]  248 	addw	sp, #4
      000128 1F 05            [ 2]  249 	ldw	(0x05, sp), x
      00012A 7B 02            [ 1]  250 	ld	a, (0x02, sp)
                                    251 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 153: if ((4U * A) >= ((lsifreqkhz - (4U * A)) * (1U + (2U * A))))
      00012C 1E 03            [ 2]  252 	ldw	x, (0x03, sp)
      00012E 13 05            [ 2]  253 	cpw	x, (0x05, sp)
      000130 25 07            [ 1]  254 	jrc	00102$
                                    255 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 155: AWU->APR = (uint8_t)(A - 2U);
      000132 A0 02            [ 1]  256 	sub	a, #0x02
      000134 C7 50 F1         [ 1]  257 	ld	0x50f1, a
      000137 20 04            [ 2]  258 	jra	00104$
      000139                        259 00102$:
                                    260 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 159: AWU->APR = (uint8_t)(A - 1U);
      000139 4A               [ 1]  261 	dec	a
      00013A C7 50 F1         [ 1]  262 	ld	0x50f1, a
      00013D                        263 00104$:
                                    264 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 161: }
      00013D 5B 06            [ 2]  265 	addw	sp, #6
      00013F 81               [ 4]  266 	ret
                                    267 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 168: void AWU_IdleModeEnable(void)
                                    268 ;	-----------------------------------------
                                    269 ;	 function AWU_IdleModeEnable
                                    270 ;	-----------------------------------------
      000140                        271 _AWU_IdleModeEnable:
                                    272 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 171: AWU->CSR &= (uint8_t)(~AWU_CSR_AWUEN);
      000140 72 19 50 F0      [ 1]  273 	bres	20720, #4
                                    274 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 174: AWU->TBR = (uint8_t)(~AWU_TBR_AWUTB);
      000144 35 F0 50 F2      [ 1]  275 	mov	0x50f2+0, #0xf0
                                    276 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 175: }
      000148 81               [ 4]  277 	ret
                                    278 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 183: FlagStatus AWU_GetFlagStatus(void)
                                    279 ;	-----------------------------------------
                                    280 ;	 function AWU_GetFlagStatus
                                    281 ;	-----------------------------------------
      000149                        282 _AWU_GetFlagStatus:
                                    283 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 185: return((FlagStatus)(((uint8_t)(AWU->CSR & AWU_CSR_AWUF) == (uint8_t)0x00) ? RESET : SET));
      000149 C6 50 F0         [ 1]  284 	ld	a, 0x50f0
      00014C A5 20            [ 1]  285 	bcp	a, #0x20
      00014E 26 02            [ 1]  286 	jrne	00103$
      000150 5F               [ 1]  287 	clrw	x
      000151 C5                     288 	.byte 0xc5
      000152                        289 00103$:
      000152 5F               [ 1]  290 	clrw	x
      000153 5C               [ 1]  291 	incw	x
      000154                        292 00104$:
      000154 9F               [ 1]  293 	ld	a, xl
                                    294 ;	C:\Users\Admin\.platformio\packages\framework-ststm8spl\Libraries\STM8S_StdPeriph_Driver\src\stm8s_awu.c: 186: }
      000155 81               [ 4]  295 	ret
                                    296 	.area CODE
                                    297 	.area CONST
      000000                        298 _APR_Array:
      000000 00                     299 	.db #0x00	; 0
      000001 1E                     300 	.db #0x1e	; 30
      000002 1E                     301 	.db #0x1e	; 30
      000003 1E                     302 	.db #0x1e	; 30
      000004 1E                     303 	.db #0x1e	; 30
      000005 1E                     304 	.db #0x1e	; 30
      000006 1E                     305 	.db #0x1e	; 30
      000007 1E                     306 	.db #0x1e	; 30
      000008 1E                     307 	.db #0x1e	; 30
      000009 1E                     308 	.db #0x1e	; 30
      00000A 1E                     309 	.db #0x1e	; 30
      00000B 1E                     310 	.db #0x1e	; 30
      00000C 1E                     311 	.db #0x1e	; 30
      00000D 3D                     312 	.db #0x3d	; 61
      00000E 17                     313 	.db #0x17	; 23
      00000F 17                     314 	.db #0x17	; 23
      000010 3E                     315 	.db #0x3e	; 62
      000011                        316 _TBR_Array:
      000011 00                     317 	.db #0x00	; 0
      000012 01                     318 	.db #0x01	; 1
      000013 02                     319 	.db #0x02	; 2
      000014 03                     320 	.db #0x03	; 3
      000015 04                     321 	.db #0x04	; 4
      000016 05                     322 	.db #0x05	; 5
      000017 06                     323 	.db #0x06	; 6
      000018 07                     324 	.db #0x07	; 7
      000019 08                     325 	.db #0x08	; 8
      00001A 09                     326 	.db #0x09	; 9
      00001B 0A                     327 	.db #0x0a	; 10
      00001C 0B                     328 	.db #0x0b	; 11
      00001D 0C                     329 	.db #0x0c	; 12
      00001E 0C                     330 	.db #0x0c	; 12
      00001F 0E                     331 	.db #0x0e	; 14
      000020 0F                     332 	.db #0x0f	; 15
      000021 0F                     333 	.db #0x0f	; 15
                                    334 	.area CONST
      000022                        335 ___str_0:
      000022 43 3A                  336 	.ascii "C:"
      000024 5C                     337 	.db 0x5c
      000025 55 73 65 72 73         338 	.ascii "Users"
      00002A 5C                     339 	.db 0x5c
      00002B 41 64 6D 69 6E         340 	.ascii "Admin"
      000030 5C                     341 	.db 0x5c
      000031 2E 70 6C 61 74 66 6F   342 	.ascii ".platformio"
             72 6D 69 6F
      00003C 5C                     343 	.db 0x5c
      00003D 70 61 63 6B 61 67 65   344 	.ascii "packages"
             73
      000045 5C                     345 	.db 0x5c
      000046 66 72 61 6D 65 77 6F   346 	.ascii "framework-ststm8spl"
             72 6B 2D 73 74 73 74
             6D 38 73 70 6C
      000059 5C                     347 	.db 0x5c
      00005A 4C 69 62 72 61 72 69   348 	.ascii "Libraries"
             65 73
      000063 5C                     349 	.db 0x5c
      000064 53 54 4D 38 53 5F 53   350 	.ascii "STM8S_StdPeriph_Driver"
             74 64 50 65 72 69 70
             68 5F 44 72 69 76 65
             72
      00007A 5C                     351 	.db 0x5c
      00007B 73 72 63               352 	.ascii "src"
      00007E 5C                     353 	.db 0x5c
      00007F 73 74 6D 38 73 5F 61   354 	.ascii "stm8s_awu.c"
             77 75 2E 63
      00008A 00                     355 	.db 0x00
                                    356 	.area CODE
                                    357 	.area INITIALIZER
                                    358 	.area CABS (ABS)
